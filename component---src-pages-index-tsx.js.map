{"version":3,"file":"component---src-pages-index-tsx.js","mappings":"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","sources":["webpack://borderless/./src/components/PostList/index.tsx","webpack://borderless/./src/components/Bio/index.tsx","webpack://borderless/./src/pages/index.tsx"],"sourcesContent":["/* eslint-disable react/display-name */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Link } from 'gatsby'\nimport { throttle } from 'lodash'\nimport React, { memo, useCallback, useEffect, useMemo, useState } from 'react'\n\nimport './postList.scss'\n\ninterface PostNode {\n  node: {\n    excerpt: string\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      date: string\n      title: string\n      tags: string[]\n      update?: string\n    }\n    timeToRead: number\n  }\n}\n\nexport interface PostListProps {\n  posts: PostNode[]\n}\n\n// eslint-disable-next-line react/prop-types\nconst Tag: React.FC<{ tag: string; slug: string }> = memo(({ tag, slug }) => {\n  if (tag === 'undefined') return null\n\n  return (\n    <li key={`${slug}-${tag}`} className=\"tag\">\n      <span>\n        <Link to={`/tags#${tag}`} className=\"link\">{`#${tag}`}</Link>\n      </span>\n    </li>\n  )\n})\n\n// eslint-disable-next-line react/prop-types\nconst PostList: React.FC<PostListProps> = memo(({ posts }) => {\n  const [showCnt, setShowCnt] = useState(10)\n\n  const sortedPosts = useMemo(\n    () =>\n      // eslint-disable-next-line react/prop-types\n      posts.sort((a, b) => {\n        const aDate = new Date(a.node.frontmatter.update ?? a.node.frontmatter.date)\n        const bDate = new Date(b.node.frontmatter.update ?? b.node.frontmatter.date)\n\n        return bDate.getTime() - aDate.getTime()\n      }),\n    [posts]\n  )\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (window.outerHeight + window.scrollY > document.body.offsetHeight) {\n        // eslint-disable-next-line react/prop-types\n        setShowCnt(prev => (prev >= posts.length ? prev : prev + 10))\n      }\n    }, 250),\n    // eslint-disable-next-line react/prop-types\n    [posts.length]\n  )\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttleScrollHandler)\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler)\n    }\n  }, [throttleScrollHandler])\n\n  const mapPost = sortedPosts.map((post: any, i: number) => {\n    const { node } = post\n    const { excerpt, fields, frontmatter, timeToRead } = node\n    const { slug } = fields\n    const { date, title, tags } = frontmatter\n\n    let update = frontmatter.update\n    if (Number(update?.split(',')[1]) === 1) update = null\n\n    return (\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\n        <div className=\"date\">\n          <small>\n            {date} • {timeToRead} min read ☕\n          </small>\n        </div>\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug} className=\"link\">\n              {title}\n            </Link>\n          </h2>\n          <div className=\"info\">\n            <ul className=\"tag-list\">\n              {tags.map((tag: string) => (\n                <Tag key={tag} tag={tag} slug={slug} />\n              ))}\n            </ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug} className=\"link\">\n              {excerpt}\n            </Link>\n          </span>\n        </article>\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  )\n})\n\nexport default PostList\n","import {\n  // eslint-disable-next-line import/named\n  IconDefinition,\n  faFacebook,\n  faGithub,\n  faInstagram,\n  faKaggle,\n  faLinkedin,\n  faMedium,\n  faSlideshare,\n} from '@fortawesome/free-brands-svg-icons'\nimport {\n  faAddressCard,\n  faAt,\n  faBuilding,\n  faLink,\n  faMapMarkerAlt,\n  faRss,\n  faUserCircle,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome'\nimport React, { memo } from 'react'\n\nimport './bio.scss'\nimport config from '../../../config'\n\ntype SocialIconKey = 'linkedin' | 'facebook' | 'instagram' | 'github' | 'kaggle' | 'medium' | 'sildeshare'\n\n// eslint-disable-next-line react/display-name\nconst BioItem = memo<{ icon: IconDefinition; link?: string; text?: string; className?: string }>(\n  // eslint-disable-next-line react/prop-types\n  ({ icon, link, text, className }) => (\n    <div className={`bio-item ${className || ''}`}>\n      <div className=\"icon-wrap\">\n        <Fa icon={icon} />\n      </div>\n      {link ? (\n        <a href={link} aria-label={text}>\n          {text || link}\n        </a>\n      ) : text ? (\n        <span>{text}</span>\n      ) : null}\n    </div>\n  )\n)\n\n// eslint-disable-next-line react/display-name, react/prop-types\nconst SocialItem = memo<{ icon: IconDefinition; link?: string; className?: string }>(({ icon, link, className }) => (\n  <a href={link} className={className} target=\"_blank\" rel=\"noopener noreferrer\">\n    <Fa icon={icon} className={className} />\n  </a>\n))\n\nconst Bio = () => {\n  const {\n    comment,\n    name,\n    company,\n    location,\n    email,\n    website,\n    linkedin,\n    facebook,\n    instagram,\n    github,\n    kaggle,\n    medium,\n    sildeshare,\n  } = config\n\n  const socialLinks = {\n    linkedin,\n    facebook,\n    instagram,\n    github,\n    kaggle,\n    medium,\n    sildeshare,\n  }\n\n  const socialIcons: { [key in SocialIconKey]: IconDefinition } = {\n    linkedin: faLinkedin,\n    facebook: faFacebook,\n    instagram: faInstagram,\n    github: faGithub,\n    kaggle: faKaggle,\n    medium: faMedium,\n    sildeshare: faSlideshare,\n  }\n\n  return (\n    <div className=\"bio\">\n      {comment && <span className=\"comment\">{comment}</span>}\n\n      <BioItem icon={faUserCircle} link=\"/about\" text={name} className=\"name\" />\n      <BioItem icon={faBuilding} text={company} className=\"company\" />\n      <BioItem icon={faMapMarkerAlt} text={location} className=\"location\" />\n      <BioItem icon={faAt} link={`mailto:${email}`} text={email} className=\"email\" />\n      <BioItem icon={faLink} link={website} className=\"website\" />\n      <BioItem icon={faAddressCard} link=\"/about\" text=\"About ME\" className=\"about\" />\n\n      <div className=\"social\">\n        <SocialItem icon={faRss} link={`${config.siteUrl}/rss`} className=\"rss\" />\n\n        {Object.entries(socialLinks).map(([key, value]) =>\n          value ? <SocialItem key={key} icon={socialIcons[key as SocialIconKey]} link={value} className={key} /> : null\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Bio)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome'\nimport { Link, graphql } from 'gatsby'\nimport React from 'react'\n\nimport './styles/index.scss'\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport PostList from '../components/PostList'\nimport SEO from '../components/seo'\n\ninterface IndexPageProps {\n  path: string\n  data: any\n}\n\nconst IndexPage: React.FC<IndexPageProps> = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n    site: {\n      siteMetadata: { title },\n    },\n  } = data\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 10 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }, limit: 50) {\n      edges {\n        node {\n          excerpt(truncate: true, format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["Tag","memo","_ref","tag","slug","React","key","className","Link","to","PostList","_ref2","posts","showCnt","setShowCnt","useState","sortedPosts","useMemo","sort","a","b","_a$node$frontmatter$u","_b$node$frontmatter$u","aDate","Date","node","frontmatter","update","date","getTime","throttleScrollHandler","useCallback","_throttle","window","outerHeight","scrollY","document","body","offsetHeight","prev","length","useEffect","addEventListener","removeEventListener","mapPost","map","post","i","_update","excerpt","fields","timeToRead","title","tags","Number","split","BioItem","icon","link","text","Fa","href","SocialItem","target","rel","Bio","comment","name","company","location","email","website","linkedin","facebook","instagram","github","kaggle","medium","sildeshare","config","socialLinks","socialIcons","faLinkedin","faFacebook","faInstagram","faGithub","faKaggle","faMedium","faSlideshare","faUserCircle","faBuilding","faMapMarkerAlt","faAt","faLink","faAddressCard","faRss","Object","entries","_ref3","value","data","allMarkdownRemark","edges","site","siteMetadata","Layout","SEO","faSearch"],"sourceRoot":""}