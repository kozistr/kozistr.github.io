{"version":3,"file":"component---src-pages-search-tsx.js","mappings":"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","sources":["webpack://borderless/./src/components/PostList/index.tsx","webpack://borderless/./src/pages/search.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { throttle } from 'lodash'\nimport * as React from 'react'\nimport { memo, useCallback, useEffect, useState } from 'react'\n\nimport './postList.scss'\n\nexport interface PostListProps {\n  posts: any[]\n}\n\nconst PostList = memo((props: PostListProps) => {\n  const { posts } = props\n  const [showCnt, setShowCnt] = useState(10)\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= posts.length) return prev\n          return prev + 10\n        })\n      }\n    }, 250),\n    []\n  )\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttleScrollHandler)\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler)\n    }\n  }, [])\n\n  posts.sort((a: any, b: any) => {\n    const aDate = new Date(a.node.frontmatter.update ?? a.node.frontmatter.date)\n    const bDate = new Date(b.node.frontmatter.update ?? b.node.frontmatter.date)\n\n    if (aDate < bDate) return 1\n    if (aDate > bDate) return -1\n    return 0\n  })\n\n  const mapPost = posts.map((post: any, i: number) => {\n    const { node } = post\n    const { excerpt, fields, frontmatter, timeToRead } = node\n    const { slug } = fields\n    const { date, title, tags } = frontmatter\n\n    let update = frontmatter.update\n    if (Number(update.split(',')[1]) === 1) update = null\n\n    const mapTag = tags.map((tag: string) => {\n      if (tag === 'undefined') return\n\n      return (\n        <li key={`${slug}-${tag}`} className=\"tag\">\n          <span>\n            <Link to={`/tags#${tag}`} className=\"link\">{`#${tag}`}</Link>\n          </span>\n        </li>\n      )\n    })\n\n    return (\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\n        <div className=\"date\">\n          <small>\n            {date} • {timeToRead} min read ☕\n          </small>\n        </div>\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug} className=\"link\">\n              {title}\n            </Link>\n          </h2>\n          <div className=\"info\">\n            <ul className=\"tag-list\">{mapTag}</ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug} className=\"link\">\n              {excerpt}\n            </Link>\n          </span>\n        </article>\n      </li>\n    )\n  })\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  )\n})\n\nexport default PostList\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome'\nimport { graphql } from 'gatsby'\nimport * as React from 'react'\nimport { useCallback, useState } from 'react'\n\nimport Layout from '../components/Layout'\nimport PostList from '../components/PostList'\nimport SEO from '../components/seo'\n\nimport './styles/search.scss'\n\ninterface SearchProps {\n  data: any\n}\n\nconst Search = (props: SearchProps) => {\n  const { data } = props\n  const posts = data.allMarkdownRemark.edges\n\n  const [value, setValue] = useState('')\n  const [isTitleOnly, setIsTitleOnly] = useState(true)\n\n  const filteredPosts = useCallback(\n    posts.filter((post: any) => {\n      const { node } = post\n      const { frontmatter, rawMarkdownBody } = node\n      const { title } = frontmatter\n      const lowerValue = value.toLocaleLowerCase()\n\n      if (!isTitleOnly && rawMarkdownBody.toLocaleLowerCase().includes(lowerValue)) return true\n\n      return title.toLocaleLowerCase().includes(lowerValue)\n    }),\n    [value, isTitleOnly]\n  )\n\n  return (\n    <Layout>\n      <SEO title=\"Search\" />\n      <div id=\"Search\">\n        <div className=\"search-inner-wrap\">\n          <div className=\"input-wrap\">\n            <Fa icon={faSearch} />\n            <input\n              type=\"text\"\n              name=\"search\"\n              id=\"searchInput\"\n              value={value}\n              placeholder=\"Search\"\n              autoComplete=\"off\"\n              autoFocus\n              onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                setValue(e.currentTarget.value)\n              }}\n            />\n            <div className=\"search-toggle\">\n              <span\n                style={{ opacity: isTitleOnly ? 0.8 : 0.15 }}\n                onClick={() => {\n                  setIsTitleOnly(true)\n                }}\n              >\n                in Title\n              </span>\n              <span\n                style={{ opacity: !isTitleOnly ? 0.8 : 0.15 }}\n                onClick={() => {\n                  setIsTitleOnly(false)\n                }}\n              >\n                in Title+Content\n              </span>\n            </div>\n          </div>\n\n          {value !== '' && !filteredPosts.length ? <span className=\"no-result\">No search results</span> : null}\n          <PostList posts={value === '' ? posts : filteredPosts} />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          rawMarkdownBody\n          excerpt(truncate: true, format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n            update(formatString: \"MMM DD, YYYY\")\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default Search\n"],"names":["PostList","memo","props","posts","showCnt","setShowCnt","useState","throttleScrollHandler","useCallback","_throttle","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","length","useEffect","addEventListener","removeEventListener","sort","a","b","aDate","Date","node","frontmatter","update","date","bDate","mapPost","map","post","i","excerpt","fields","timeToRead","slug","title","tags","Number","split","mapTag","tag","React","key","className","Link","to","data","allMarkdownRemark","edges","value","setValue","isTitleOnly","setIsTitleOnly","filteredPosts","filter","rawMarkdownBody","lowerValue","toLocaleLowerCase","includes","Layout","SEO","id","Fa","icon","faSearch","type","name","placeholder","autoComplete","autoFocus","onChange","e","currentTarget","style","opacity","onClick"],"sourceRoot":""}