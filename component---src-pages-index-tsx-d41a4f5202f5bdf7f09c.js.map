{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/Bio/index.tsx","webpack:///./src/components/PostList/index.tsx"],"names":["IndexPage","props","data","posts","allMarkdownRemark","edges","title","site","siteMetadata","className","length","to","icon","faSearch","Bio","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","faUserCircle","faAddressCard","faMapMarkerAlt","faAt","href","faLink","target","rel","siteUrl","faRss","faLinkedin","faFacebook","faInstagram","faGithub","PostList","useState","showCnt","setShowCnt","currentPostList","setCurrentPostList","sortedPosts","useMemo","sort","a","b","af","node","frontmatter","bf","aDate","Date","update","includes","date","bDate","throttleScrollHandler","useCallback","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","expendPostList","list","mapToList","map","post","excerpt","fields","slug","tags","Number","split","mapTag","tag","key","useEffect","slice","addEventListener","removeEventListener"],"mappings":"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","file":"component---src-pages-index-tsx-d41a4f5202f5bdf7f09c.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nimport * as React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Layout from '../components/Layout';\r\nimport SEO from '../components/seo';\r\nimport Bio from '../components/Bio';\r\nimport './styles/index.scss';\r\nimport PostList from '../components/PostList';\r\n\r\ninterface IndexPageProps {\r\n  path: string;\r\n  data: any;\r\n}\r\n\r\nconst IndexPage = (props: IndexPageProps) => {\r\n  const { data } = props;\r\n  const posts = data.allMarkdownRemark.edges;\r\n  const title = data.site.siteMetadata.title;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} />\r\n      <div className=\"index-wrap\">\r\n        <Bio />\r\n        <div className=\"index-post-list-wrap\">\r\n          <PostList posts={posts} />\r\n          {posts.length < 100 ? null : (\r\n            <div className=\"show-more-posts\">\r\n              <div className=\"show-more-btn\">\r\n                <Link to=\"/search\">\r\n                  <Fa icon={faSearch} />\r\n                  <span>SHOW MORE POSTS</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\r\n      edges {\r\n        node {\r\n          excerpt(truncate: true, format: PLAIN)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMM DD, YYYY\")\r\n            update(formatString: \"MMM DD, YYYY\")\r\n            title\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexPage;\r\n","import * as React from 'react';\r\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle, faAt, faMapMarkerAlt, faLink, faAddressCard, faRss } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebook, faInstagram, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport './bio.scss';\r\nimport config from '../../../config';\r\n\r\nconst Bio = () => {\r\n  const { comment, name, company, location, email, website, linkedin, facebook, instagram, github } = config;\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\r\n\r\n      {!name ? null : (\r\n        <div className=\"bio-item name\">\r\n          <div className=\"icon-wrap\">\r\n            <Fa icon={faUserCircle} />\r\n          </div>\r\n          <span>{name}</span>\r\n        </div>\r\n      )}\r\n\r\n      {!company ? null : (\r\n        <div className=\"bio-item company\">\r\n          <div className=\"icon-wrap\">\r\n            <Fa icon={faAddressCard} />\r\n          </div>\r\n          <span>{company}</span>\r\n        </div>\r\n      )}\r\n\r\n      {!location ? null : (\r\n        <div className=\"bio-item location\">\r\n          <div className=\"icon-wrap\">\r\n            <Fa icon={faMapMarkerAlt} />\r\n          </div>\r\n          <span>{location}</span>\r\n        </div>\r\n      )}\r\n\r\n      {!email ? null : (\r\n        <div className=\"bio-item email\">\r\n          <div className=\"icon-wrap\">\r\n            <Fa icon={faAt} />\r\n          </div>\r\n          <a href={`mailto:${email}`}>{email}</a>\r\n        </div>\r\n      )}\r\n\r\n      {!website ? null : (\r\n        <div className=\"bio-item website\">\r\n          <div className=\"icon-wrap\">\r\n            <Fa icon={faLink} />\r\n          </div>\r\n\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {website}\r\n          </a>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"social\">\r\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <Fa icon={faRss} className=\"rss\" />\r\n        </a>\r\n\r\n        {!linkedin ? null : (\r\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Fa icon={faLinkedin} className=\"linkedin\" />\r\n          </a>\r\n        )}\r\n\r\n        {!facebook ? null : (\r\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Fa icon={faFacebook} className=\"facebook\" />\r\n          </a>\r\n        )}\r\n        {!instagram ? null : (\r\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Fa icon={faInstagram} className=\"instagram\" />\r\n          </a>\r\n        )}\r\n        {!github ? null : (\r\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Fa icon={faGithub} className=\"github\" />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bio;\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nimport * as React from 'react';\r\nimport { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { throttle } from 'lodash';\r\n\r\nimport './postList.scss';\r\n\r\ninterface PostListProps {\r\n  posts: any[];\r\n}\r\n\r\nconst PostList = (props: PostListProps) => {\r\n  const { posts } = props;\r\n  const [showCnt, setShowCnt] = useState(10);\r\n  const [currentPostList, setCurrentPostList] = useState<JSX.Element[]>([]);\r\n  const sortedPosts = useMemo(() => {\r\n    posts.sort((a: any, b: any) => {\r\n      const af = a.node.frontmatter;\r\n      const bf = b.node.frontmatter;\r\n\r\n      const aDate = new Date(af.update.includes('0001') ? af.date : af.update);\r\n      const bDate = new Date(bf.update.includes('0001') ? bf.date : bf.update);\r\n\r\n      if (aDate < bDate) return 1;\r\n      if (aDate > bDate) return -1;\r\n      return 0;\r\n    });\r\n    return posts;\r\n  }, [posts]);\r\n\r\n  const throttleScrollHandler = useCallback(\r\n    throttle(() => {\r\n      if (\r\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\r\n      ) {\r\n        setShowCnt((prev: number) => {\r\n          if (prev >= sortedPosts.length) return prev;\r\n          return prev + 10;\r\n        });\r\n      }\r\n    }, 250),\r\n    [sortedPosts]\r\n  );\r\n\r\n  const expendPostList = useCallback((list: any) => {\r\n    const mapToList = list.map((post: any) => {\r\n      const { node } = post;\r\n      const { excerpt, fields, frontmatter } = node;\r\n      const { slug } = fields;\r\n      const { date, title, tags } = frontmatter;\r\n      let update = frontmatter.update;\r\n      if (Number(update.split(',')[1]) === 1) update = null;\r\n\r\n      const mapTag = tags.map((tag: string) => {\r\n        if (tag === 'undefined') return;\r\n\r\n        return (\r\n          <div key={`${slug}-${tag}`} className=\"tag\">\r\n            <span>\r\n              <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\r\n            </span>\r\n          </div>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <li key={slug} className={`post`}>\r\n          <article>\r\n            <h2 className=\"title\">\r\n              <Link to={slug}>{title}</Link>\r\n            </h2>\r\n            <div className=\"info\">\r\n              <div className=\"date-wrap\">\r\n                <span className=\"date\">{date}</span>\r\n                {update ? <span className=\"update\">&nbsp;{`(Updated: ${update})`}</span> : null}\r\n              </div>\r\n              {tags.length && tags[0] !== 'undefined' ? <span className=\"info-dot\">·</span> : null}\r\n              <ul className=\"tag-list\">{mapTag}</ul>\r\n            </div>\r\n            <Link to={slug}>\r\n              <span className=\"excerpt\">{excerpt}</span>\r\n            </Link>\r\n          </article>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    setCurrentPostList((prev: JSX.Element[]) => {\r\n      return [...prev, ...mapToList];\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showCnt > 0 && showCnt !== 10) expendPostList(sortedPosts.slice(currentPostList.length, showCnt));\r\n  }, [showCnt]);\r\n\r\n  useEffect(() => {\r\n    if (currentPostList.length) setCurrentPostList([]);\r\n\r\n    setShowCnt((prev: number) => {\r\n      if (prev === 10) expendPostList(sortedPosts.slice(0, 10));\r\n      return 10;\r\n    });\r\n\r\n    window.addEventListener('scroll', throttleScrollHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', throttleScrollHandler);\r\n    };\r\n  }, [sortedPosts]);\r\n\r\n  return (\r\n    <div className=\"post-list\">\r\n      <ul>{currentPostList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"sourceRoot":""}