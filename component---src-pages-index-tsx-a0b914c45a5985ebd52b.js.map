{"version":3,"sources":["webpack:///./src/components/Bio/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList/index.tsx"],"names":["Bio","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","className","icon","faUserCircle","href","faAddressCard","faMapMarkerAlt","faAt","faLink","target","rel","siteUrl","faRss","faLinkedin","faFacebook","faInstagram","faGithub","IndexPage","props","data","posts","allMarkdownRemark","edges","title","site","siteMetadata","Layout","PostList","length","to","faSearch","useState","showCnt","setShowCnt","currentPostList","setCurrentPostList","sortedPosts","useMemo","sort","a","b","af","node","frontmatter","bf","aDate","Date","update","includes","date","bDate","throttleScrollHandler","useCallback","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","expendPostList","list","mapToList","map","post","excerpt","fields","slug","tags","Number","split","mapTag","tag","key","useEffect","slice","addEventListener","removeEventListener"],"mappings":"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","file":"component---src-pages-index-tsx-a0b914c45a5985ebd52b.js","sourcesContent":["import * as React from 'react';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faUserCircle, faAt, faMapMarkerAlt, faLink, faAddressCard, faRss } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faInstagram, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport './bio.scss';\nimport config from '../../../config';\n\nconst Bio = () => {\n  const { comment, name, company, location, email, website, linkedin, facebook, instagram, github } = config;\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <a href=\"/about\">\n            <span>{name}</span>\n          </a>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAddressCard} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"bio-item address-card\">\n        <div className=\"icon-wrap\">\n          <Fa icon={faLink} />\n        </div>\n\n        <a href=\"/about\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <p>About ME</p>\n        </a>\n      </div>\n\n      <div className=\"social\">\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Bio from '../components/Bio';\nimport './styles/index.scss';\nimport PostList from '../components/PostList';\n\ninterface IndexPageProps {\n  path: string;\n  data: any;\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props;\n  const posts = data.allMarkdownRemark.edges;\n  const title = data.site.siteMetadata.title;\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 10 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(truncate: true, format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { Link } from 'gatsby';\nimport { throttle } from 'lodash';\n\nimport './postList.scss';\n\ninterface PostListProps {\n  posts: any[];\n}\n\nconst PostList = (props: PostListProps) => {\n  const { posts } = props;\n  const [showCnt, setShowCnt] = useState(10);\n  const [currentPostList, setCurrentPostList] = useState<JSX.Element[]>([]);\n  const sortedPosts = useMemo(() => {\n    posts.sort((a: any, b: any) => {\n      const af = a.node.frontmatter;\n      const bf = b.node.frontmatter;\n\n      const aDate = new Date(af.update.includes('0001') ? af.date : af.update);\n      const bDate = new Date(bf.update.includes('0001') ? bf.date : bf.update);\n\n      if (aDate < bDate) return 1;\n      if (aDate > bDate) return -1;\n      return 0;\n    });\n    return posts;\n  }, [posts]);\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= sortedPosts.length) return prev;\n          return prev + 10;\n        });\n      }\n    }, 250),\n    [sortedPosts]\n  );\n\n  const expendPostList = useCallback((list: any) => {\n    const mapToList = list.map((post: any) => {\n      const { node } = post;\n      const { excerpt, fields, frontmatter } = node;\n      const { slug } = fields;\n      const { date, title, tags } = frontmatter;\n      let update = frontmatter.update;\n      if (Number(update.split(',')[1]) === 1) update = null;\n\n      const mapTag = tags.map((tag: string) => {\n        if (tag === 'undefined') return;\n\n        return (\n          <div key={`${slug}-${tag}`} className=\"tag\">\n            <span>\n              <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\n            </span>\n          </div>\n        );\n      });\n\n      return (\n        <li key={slug} className={`post`}>\n          <article>\n            <h2 className=\"title\">\n              <Link to={slug}>{title}</Link>\n            </h2>\n            <div className=\"info\">\n              <div className=\"date-wrap\">\n                <span className=\"date\">{date}</span>\n                {update ? <span className=\"update\">&nbsp;{`(Updated: ${update})`}</span> : null}\n              </div>\n              {tags.length && tags[0] !== 'undefined' ? <span className=\"info-dot\">·</span> : null}\n              <ul className=\"tag-list\">{mapTag}</ul>\n            </div>\n            <Link to={slug}>\n              <span className=\"excerpt\">{excerpt}</span>\n            </Link>\n          </article>\n        </li>\n      );\n    });\n\n    setCurrentPostList((prev: JSX.Element[]) => {\n      return [...prev, ...mapToList];\n    });\n  }, []);\n\n  useEffect(() => {\n    if (showCnt > 0 && showCnt !== 10) expendPostList(sortedPosts.slice(currentPostList.length, showCnt));\n  }, [showCnt]);\n\n  useEffect(() => {\n    if (currentPostList.length) setCurrentPostList([]);\n\n    setShowCnt((prev: number) => {\n      if (prev === 10) expendPostList(sortedPosts.slice(0, 10));\n      return 10;\n    });\n\n    window.addEventListener('scroll', throttleScrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler);\n    };\n  }, [sortedPosts]);\n\n  return (\n    <div className=\"post-list\">\n      <ul>{currentPostList}</ul>\n    </div>\n  );\n};\n\nexport default PostList;\n"],"sourceRoot":""}