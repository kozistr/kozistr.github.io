{"version":3,"sources":["webpack:///./src/components/Bio/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList/index.tsx"],"names":["Bio","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","className","icon","faUserCircle","href","faBuilding","faMapMarkerAlt","faAt","faLink","target","rel","faAddressCard","siteUrl","faRss","faLinkedin","faFacebook","faInstagram","faGithub","IndexPage","props","data","posts","allMarkdownRemark","edges","title","site","siteMetadata","Layout","PostList","length","to","faSearch","memo","useState","showCnt","setShowCnt","throttleScrollHandler","useCallback","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","useEffect","addEventListener","removeEventListener","sort","a","b","aDate","Date","node","frontmatter","update","date","bDate","mapPost","map","post","i","excerpt","fields","slug","tags","timeToRead","Number","split","mapTag","tag","key"],"mappings":"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","file":"component---src-pages-index-tsx-0f432742080a91b6c5f3.js","sourcesContent":["import * as React from 'react';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport {\n  faUserCircle,\n  faAt,\n  faMapMarkerAlt,\n  faBuilding,\n  faLink,\n  faAddressCard,\n  faRss,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faInstagram, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport './bio.scss';\nimport config from '../../../config';\n\nconst Bio = () => {\n  const { comment, name, company, location, email, website, linkedin, facebook, instagram, github } = config;\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <a href=\"/about\">\n            <span>{name}</span>\n          </a>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faBuilding} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"bio-item about\">\n        <div className=\"icon-wrap\">\n          <Fa icon={faAddressCard} />\n        </div>\n\n        <a href=\"/about\">\n          <span>About ME</span>\n        </a>\n      </div>\n\n      <div className=\"social\">\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Bio from '../components/Bio';\nimport './styles/index.scss';\nimport PostList from '../components/PostList';\n\ninterface IndexPageProps {\n  path: string;\n  data: any;\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props;\n  const posts = data.allMarkdownRemark.edges;\n  const title = data.site.siteMetadata.title;\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 10 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(truncate: true, format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import * as React from 'react';\nimport { memo, useEffect, useState, useCallback } from 'react';\nimport { Link } from 'gatsby';\nimport { throttle } from 'lodash';\n\nimport './postList.scss';\n\nexport interface PostListProps {\n  posts: any[];\n}\n\nconst PostList = memo((props: PostListProps) => {\n  const { posts } = props;\n  const [showCnt, setShowCnt] = useState(10);\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= posts.length) return prev;\n          return prev + 10;\n        });\n      }\n    }, 250),\n    []\n  );\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttleScrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler);\n    };\n  }, []);\n\n  posts.sort((a: any, b: any) => {\n    const aDate = new Date(a.node.frontmatter.update ?? a.node.frontmatter.date);\n    const bDate = new Date(b.node.frontmatter.update ?? b.node.frontmatter.date);\n\n    if (aDate < bDate) return 1;\n    if (aDate > bDate) return -1;\n    return 0;\n  });\n\n  const mapPost = posts.map((post: any, i: number) => {\n    const { node } = post;\n    const { excerpt, fields, frontmatter } = node;\n    const { slug } = fields;\n    const { date, title, tags } = frontmatter;\n    const { timeToRead } = node;\n\n    let update = frontmatter.update;\n    if (Number(update.split(',')[1]) === 1) update = null;\n\n    const mapTag = tags.map((tag: string) => {\n      if (tag === 'undefined') return;\n\n      return (\n        <li key={`${slug}-${tag}`} className=\"tag\">\n          <span>\n            <Link to={`/tags#${tag}`} className=\"link\">{`#${tag}`}</Link>\n          </span>\n        </li>\n      );\n    });\n\n    return (\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\n        <div className=\"date\">\n          <small>\n            {' '}\n            {date} •{timeToRead} min read ☕{' '}\n          </small>\n        </div>\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug} className=\"link\">\n              {title}\n            </Link>\n          </h2>\n          <div className=\"info\">\n            <ul className=\"tag-list\">{mapTag}</ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug} className=\"link\">\n              {excerpt}\n            </Link>\n          </span>\n        </article>\n      </li>\n    );\n  });\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  );\n});\n\nexport default PostList;\n"],"sourceRoot":""}