{"version":3,"file":"component---src-pages-index-tsx-d00045e999b340ebf4df.js","mappings":"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","sources":["webpack://borderless/./src/components/PostList/index.tsx","webpack://borderless/./src/components/Bio/index.tsx","webpack://borderless/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { memo, useEffect, useState, useCallback } from 'react'\nimport { Link } from 'gatsby'\nimport { throttle } from 'lodash'\n\nimport './postList.scss'\n\nexport interface PostListProps {\n  posts: any[]\n}\n\nconst PostList = memo((props: PostListProps) => {\n  const { posts } = props\n  const [showCnt, setShowCnt] = useState(10)\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= posts.length) return prev\n          return prev + 10\n        })\n      }\n    }, 250),\n    []\n  )\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttleScrollHandler)\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler)\n    }\n  }, [])\n\n  posts.sort((a: any, b: any) => {\n    const aDate = new Date(a.node.frontmatter.update ?? a.node.frontmatter.date)\n    const bDate = new Date(b.node.frontmatter.update ?? b.node.frontmatter.date)\n\n    if (aDate < bDate) return 1\n    if (aDate > bDate) return -1\n    return 0\n  })\n\n  const mapPost = posts.map((post: any, i: number) => {\n    const { node } = post\n    const { excerpt, fields, frontmatter, timeToRead } = node\n    const { slug } = fields\n    const { date, title, tags } = frontmatter\n\n    let update = frontmatter.update\n    if (Number(update.split(',')[1]) === 1) update = null\n\n    const mapTag = tags.map((tag: string) => {\n      if (tag === 'undefined') return\n\n      return (\n        <li key={`${slug}-${tag}`} className=\"tag\">\n          <span>\n            <Link to={`/tags#${tag}`} className=\"link\">{`#${tag}`}</Link>\n          </span>\n        </li>\n      )\n    })\n\n    return (\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\n        <div className=\"date\">\n          <small>\n            {date} • {timeToRead} min read ☕\n          </small>\n        </div>\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug} className=\"link\">\n              {title}\n            </Link>\n          </h2>\n          <div className=\"info\">\n            <ul className=\"tag-list\">{mapTag}</ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug} className=\"link\">\n              {excerpt}\n            </Link>\n          </span>\n        </article>\n      </li>\n    )\n  })\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  )\n})\n\nexport default PostList\n","import * as React from 'react'\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome'\nimport {\n  faUserCircle,\n  faAt,\n  faMapMarkerAlt,\n  faBuilding,\n  faLink,\n  faAddressCard,\n  faRss,\n} from '@fortawesome/free-solid-svg-icons'\nimport {\n  faFacebook,\n  faInstagram,\n  faLinkedin,\n  faGithub,\n  faKaggle,\n  faMedium,\n  faSlideshare,\n} from '@fortawesome/free-brands-svg-icons'\n\nimport './bio.scss'\nimport config from '../../../config'\n\nconst Bio = () => {\n  const {\n    comment,\n    name,\n    company,\n    location,\n    email,\n    website,\n    linkedin,\n    facebook,\n    instagram,\n    github,\n    kaggle,\n    medium,\n    sildeshare,\n  } = config\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <a href=\"/about\">\n            <span>{name}</span>\n          </a>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faBuilding} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"bio-item about\">\n        <div className=\"icon-wrap\">\n          <Fa icon={faAddressCard} />\n        </div>\n\n        <a href=\"/about\">\n          <span>About ME</span>\n        </a>\n      </div>\n\n      <div className=\"social\">\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n        {!kaggle ? null : (\n          <a href={kaggle} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faKaggle} className=\"kaggle\" />\n          </a>\n        )}\n        {!medium ? null : (\n          <a href={medium} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faMedium} className=\"medium\" />\n          </a>\n        )}\n        {!sildeshare ? null : (\n          <a href={sildeshare} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faSlideshare} className=\"sildeshare\" />\n          </a>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport './styles/index.scss'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport Bio from '../components/Bio'\nimport PostList from '../components/PostList'\n\ninterface IndexPageProps {\n  path: string\n  data: any\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props\n  const posts = data.allMarkdownRemark.edges\n  const title = data.site.siteMetadata.title\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 10 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(truncate: true, format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n"],"names":["PostList","memo","posts","props","useState","showCnt","setShowCnt","throttleScrollHandler","useCallback","window","document","prev","useEffect","aDate","Date","a","bDate","b","mapPost","node","post","excerpt","fields","frontmatter","timeToRead","slug","date","title","tags","update","Number","mapTag","tag","key","className","to","i","Bio","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","kaggle","medium","sildeshare","icon","href","target","rel","data","faSearch"],"sourceRoot":""}