{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/2018-01-Founds/",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"selinuxsidtab_search_core---null-dereference-by-gpf\" style=\"position:relative;\"><a href=\"#selinuxsidtab_search_core---null-dereference-by-gpf\" aria-label=\"selinuxsidtab_search_core   null dereference by gpf permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>selinux/sidtab_search_core - null dereference by GPF</h2>\n<p>I got this bug with 'syzkaller' about a month ago (on v4.15.0-rc4) and have forgotten it, but now on v4.15.0-rc8, the same bug is triggered by my POC code, so I wrote about it :).</p>\n<p>First of all, from the conclusion, it is <strong>(practically?), not critical</strong>. Because, nowadays, null dereference isn't worked anymore unless expanding minimum virtual memory limitation.</p>\n<p>So, I analyze this bug only to a certain extent, not trying to make full exploit code. (Strictly saying that of course, any info leaks are needed to complete this exp.)</p>\n<h3 id=\"bug\" style=\"position:relative;\"><a href=\"#bug\" aria-label=\"bug permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bug</h3>\n<p>The bug type is NULL dereference (at 0x0000000000000008). Caused by GPF (General Page Fault). To explain, when GPF occurs, the address the program attempted to access is stored in the CR2 register.\nFirst, let's see the log.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">BUG<span class=\"token operator\">:</span> unable to handle kernel <span class=\"token constant\">NULL</span> pointer dereference at <span class=\"token number\">0000000000000008</span>\nIP<span class=\"token operator\">:</span> sidtab_search_core<span class=\"token operator\">+</span><span class=\"token number\">0x2d</span><span class=\"token operator\">/</span><span class=\"token number\">0x100</span> security<span class=\"token operator\">/</span>selinux<span class=\"token operator\">/</span>ss<span class=\"token operator\">/</span>sidtab<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">88</span>\nPGD <span class=\"token number\">800000007</span>de20067 P4D <span class=\"token number\">800000007</span>de20067 PUD <span class=\"token number\">71211067</span> PMD <span class=\"token number\">0</span> \nOops<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> <span class=\"token punctuation\">[</span>#<span class=\"token number\">1</span><span class=\"token punctuation\">]</span> SMP PTI\nDumping ftrace buffer<span class=\"token operator\">:</span>\n   <span class=\"token punctuation\">(</span>ftrace buffer empty<span class=\"token punctuation\">)</span>\nModules linked in<span class=\"token operator\">:</span>\nCPU<span class=\"token operator\">:</span> <span class=\"token number\">2</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">9230</span> Comm<span class=\"token operator\">:</span> syz<span class=\"token operator\">-</span>executor4 Not tainted <span class=\"token number\">4.15</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc8<span class=\"token operator\">-</span>tsan #<span class=\"token number\">12</span>\nHardware name<span class=\"token operator\">:</span> QEMU Standard <span class=\"token function\">PC</span> <span class=\"token punctuation\">(</span>i440FX <span class=\"token operator\">+</span> PIIX<span class=\"token punctuation\">,</span> <span class=\"token number\">1996</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BIOS Ubuntu<span class=\"token operator\">-</span><span class=\"token number\">1.8</span><span class=\"token number\">.2</span><span class=\"token operator\">-</span><span class=\"token number\">1u</span>buntu1 <span class=\"token number\">04</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">2014</span>\nRIP<span class=\"token operator\">:</span> <span class=\"token number\">0010</span><span class=\"token operator\">:</span>sidtab_search_core<span class=\"token operator\">+</span><span class=\"token number\">0x2d</span><span class=\"token operator\">/</span><span class=\"token number\">0x100</span> security<span class=\"token operator\">/</span>selinux<span class=\"token operator\">/</span>ss<span class=\"token operator\">/</span>sidtab<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">88</span>\nRSP<span class=\"token operator\">:</span> <span class=\"token number\">0018</span><span class=\"token operator\">:</span>ffffafff40abfd40 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00010202</span>\nRAX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span> RBX<span class=\"token operator\">:</span> ffffffffbc8eef60 RCX<span class=\"token operator\">:</span> ffffffff8145f964\nRDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000122</span> RSI<span class=\"token operator\">:</span> ffffafff410a1000 RDI<span class=\"token operator\">:</span> ffffffffbc8eef60\nRBP<span class=\"token operator\">:</span> ffff9c3cfcc86a60 R08<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span> R09<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000006</span>\nR10<span class=\"token operator\">:</span> ffffafff40abfcf0 R11<span class=\"token operator\">:</span> <span class=\"token number\">6</span>bcc1da06bf0e4e5 R12<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span>\nR13<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R14<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R15<span class=\"token operator\">:</span> ffff9c3cfe044e40\nFS<span class=\"token operator\">:</span>  <span class=\"token number\">00007ff</span>b4e6d5700<span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> GS<span class=\"token operator\">:</span><span class=\"token function\">ffff9c3cffc00000</span><span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> knlGS<span class=\"token operator\">:</span><span class=\"token number\">0000000000000000</span>\nCS<span class=\"token operator\">:</span>  <span class=\"token number\">0010</span> DS<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> ES<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> CR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000080050033</span>\nCR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000008</span> CR3<span class=\"token operator\">:</span> <span class=\"token number\">000000007131</span>a000 CR4<span class=\"token operator\">:</span> <span class=\"token number\">00000000000006e0</span>\nDR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR1<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\nDR3<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR6<span class=\"token operator\">:</span> <span class=\"token number\">00000000fff</span>e0ff0 DR7<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000600</span>\nCall Trace<span class=\"token operator\">:</span>\n security_bounded_transition<span class=\"token operator\">+</span><span class=\"token number\">0x2d</span><span class=\"token operator\">/</span><span class=\"token number\">0x1b0</span> security<span class=\"token operator\">/</span>selinux<span class=\"token operator\">/</span>ss<span class=\"token operator\">/</span>services<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">873</span>\n selinux_setprocattr<span class=\"token operator\">+</span><span class=\"token number\">0x37e</span><span class=\"token operator\">/</span><span class=\"token number\">0x480</span> security<span class=\"token operator\">/</span>selinux<span class=\"token operator\">/</span>hooks<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">6042</span>\n security_setprocattr<span class=\"token operator\">+</span><span class=\"token number\">0x4f</span><span class=\"token operator\">/</span><span class=\"token number\">0x70</span> security<span class=\"token operator\">/</span>security<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1264</span>\n proc_pid_attr_write<span class=\"token operator\">+</span><span class=\"token number\">0x107</span><span class=\"token operator\">/</span><span class=\"token number\">0x140</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">2545</span>\n __vfs_write<span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token operator\">/</span><span class=\"token number\">0x1c0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">480</span>\n vfs_write<span class=\"token operator\">+</span><span class=\"token number\">0xe1</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">544</span>\n SYSC_write fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">589</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n SyS_write<span class=\"token operator\">+</span><span class=\"token number\">0x50</span><span class=\"token operator\">/</span><span class=\"token number\">0xc0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">581</span>\n entry_SYSCALL_64_fastpath<span class=\"token operator\">+</span><span class=\"token number\">0x25</span><span class=\"token operator\">/</span><span class=\"token number\">0x9c</span>\nRIP<span class=\"token operator\">:</span> <span class=\"token number\">0033</span><span class=\"token operator\">:</span><span class=\"token number\">0x452a39</span>\nRSP<span class=\"token operator\">:</span> <span class=\"token number\">002</span>b<span class=\"token operator\">:</span><span class=\"token number\">00007ff</span>b4e6d4c58 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00000212</span>\nCode<span class=\"token operator\">:</span> <span class=\"token number\">41</span> <span class=\"token number\">55</span> <span class=\"token number\">41</span> <span class=\"token number\">89</span> d6 <span class=\"token number\">41</span> <span class=\"token number\">54</span> <span class=\"token number\">55</span> <span class=\"token number\">41</span> <span class=\"token number\">89</span> f4 <span class=\"token number\">53</span> <span class=\"token number\">48</span> <span class=\"token number\">89</span> fb e8 <span class=\"token number\">1</span>a <span class=\"token number\">40</span> d0 ff <span class=\"token number\">48</span> <span class=\"token number\">85</span> db <span class=\"token number\">0f</span> <span class=\"token number\">84</span> <span class=\"token number\">8</span>e <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> e8 <span class=\"token number\">0</span>c <span class=\"token number\">40</span> d0 ff <span class=\"token number\">4</span>c <span class=\"token number\">8</span>b <span class=\"token number\">2</span>b <span class=\"token number\">44</span> <span class=\"token number\">89</span> e0 <span class=\"token number\">83</span> e0 <span class=\"token number\">7f</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">49</span><span class=\"token operator\">></span> <span class=\"token number\">8</span>b <span class=\"token number\">5</span>c c5 <span class=\"token number\">00</span> <span class=\"token number\">48</span> <span class=\"token number\">85</span> db <span class=\"token number\">74</span> <span class=\"token number\">28</span> e8 f4 <span class=\"token number\">3f</span> d0 ff <span class=\"token number\">8</span>b <span class=\"token number\">2</span>b <span class=\"token number\">41</span> <span class=\"token number\">39</span> ec <span class=\"token number\">77</span> \nRIP<span class=\"token operator\">:</span> sidtab_search_core<span class=\"token operator\">+</span><span class=\"token number\">0x2d</span><span class=\"token operator\">/</span><span class=\"token number\">0x100</span> security<span class=\"token operator\">/</span>selinux<span class=\"token operator\">/</span>ss<span class=\"token operator\">/</span>sidtab<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">88</span> RSP<span class=\"token operator\">:</span> ffffafff40abfd40\nCR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000008</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">[</span> end trace fcdce066308f120e <span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\nKernel panic <span class=\"token operator\">-</span> not syncing<span class=\"token operator\">:</span> Fatal exception\nDumping ftrace buffer<span class=\"token operator\">:</span>\n   <span class=\"token punctuation\">(</span>ftrace buffer empty<span class=\"token punctuation\">)</span>\nKernel Offset<span class=\"token operator\">:</span> <span class=\"token number\">0x38a00000</span> from <span class=\"token number\">0xffffffff81000000</span> <span class=\"token punctuation\">(</span>relocation range<span class=\"token operator\">:</span> <span class=\"token number\">0xffffffff80000000</span><span class=\"token operator\">-</span><span class=\"token number\">0xffffffffbfffffff</span><span class=\"token punctuation\">)</span>\nRebooting in <span class=\"token number\">86400</span> seconds<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>And first thing to do is to look the <strong>Call Trace</strong> so that we can notice where the crash is happened.\nIn this case, RIP is at security/selinux/ss/sidtab.c:88 and last call trace is in security/selinux/ss/services.c:873.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">security_bounded_transition</span><span class=\"token punctuation\">(</span>u32 old_sid<span class=\"token punctuation\">,</span> u32 new_sid<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">context</span> <span class=\"token operator\">*</span>old_context<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>new_context<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">type_datum</span> <span class=\"token operator\">*</span>type<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> index<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> rc<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">read_lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>policy_rwlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\trc <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>EINVAL<span class=\"token punctuation\">;</span>\n\told_context <span class=\"token operator\">=</span> <span class=\"token function\">sidtab_search</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sidtab<span class=\"token punctuation\">,</span> old_sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// called</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">context</span> <span class=\"token operator\">*</span><span class=\"token function\">sidtab_search_core</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">,</span> u32 sid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> force<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> hvalue<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab_node</span> <span class=\"token operator\">*</span>cur<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>s<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n\thvalue <span class=\"token operator\">=</span> <span class=\"token function\">SIDTAB_HASH</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcur <span class=\"token operator\">=</span> s<span class=\"token operator\">-></span>htable<span class=\"token punctuation\">[</span>hvalue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// line 88 // here </span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cur <span class=\"token operator\">&amp;&amp;</span> sid <span class=\"token operator\">></span> cur<span class=\"token operator\">-></span>sid<span class=\"token punctuation\">)</span>\n\t\tcur <span class=\"token operator\">=</span> cur<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>force <span class=\"token operator\">&amp;&amp;</span> cur <span class=\"token operator\">&amp;&amp;</span> sid <span class=\"token operator\">==</span> cur<span class=\"token operator\">-></span>sid <span class=\"token operator\">&amp;&amp;</span> cur<span class=\"token operator\">-></span>context<span class=\"token punctuation\">.</span>len<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>cur<span class=\"token operator\">-></span>context<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cur <span class=\"token operator\">||</span> sid <span class=\"token operator\">!=</span> cur<span class=\"token operator\">-></span>sid <span class=\"token operator\">||</span> cur<span class=\"token operator\">-></span>context<span class=\"token punctuation\">.</span>len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">/* Remap invalid SIDs to the unlabeled SID. */</span>\n\t\tsid <span class=\"token operator\">=</span> SECINITSID_UNLABELED<span class=\"token punctuation\">;</span>\n\t\thvalue <span class=\"token operator\">=</span> <span class=\"token function\">SIDTAB_HASH</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcur <span class=\"token operator\">=</span> s<span class=\"token operator\">-></span>htable<span class=\"token punctuation\">[</span>hvalue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cur <span class=\"token operator\">&amp;&amp;</span> sid <span class=\"token operator\">></span> cur<span class=\"token operator\">-></span>sid<span class=\"token punctuation\">)</span>\n\t\t\tcur <span class=\"token operator\">=</span> cur<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cur <span class=\"token operator\">||</span> sid <span class=\"token operator\">!=</span> cur<span class=\"token operator\">-></span>sid<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>cur<span class=\"token operator\">-></span>context<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>we can't know all about why it is crashed and what/where the bad pointer is only with above info.\nAbd because of KASAN, KASAN triggers before the PF, tries to access the <strong>shadow memory</strong> for the bad pointer.</p>\n<p>Then, let's have a look at the code. Using pwntools, we can easily disassemble it.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n\nbytecodes <span class=\"token operator\">=</span> <span class=\"token string\">\"41 55 41 89 d6 41 54 55 41 89 f4 53 48 89 fb e8 1a 40 d0 ff 48 85 db 0f 84 8e 00 00 00 e8 0c 40 d0 ff 4c 8b 2b 44 89 e0 83 e0 7f 49 8b 5c c5 00 48 85 db 74 28 e8 f4 3f d0 ff 8b 2b 41 39 ec 77\"</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'hex'</span><span class=\"token punctuation\">)</span>\n\nres <span class=\"token operator\">=</span> disasm<span class=\"token punctuation\">(</span>bytecodes<span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></code></pre></div>\n<p>the result is...</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">   <span class=\"token number\">0</span><span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">55</span>                   push   r13 \n   <span class=\"token number\">2</span><span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">89</span> d6                mov    r14d<span class=\"token punctuation\">,</span>edx\n   <span class=\"token number\">5</span><span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">54</span>                   push   r12\n   <span class=\"token number\">7</span><span class=\"token operator\">:</span>   <span class=\"token number\">55</span>                      push   rbp\n   <span class=\"token number\">8</span><span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">89</span> f4                mov    r12d<span class=\"token punctuation\">,</span>esi\n   b<span class=\"token operator\">:</span>   <span class=\"token number\">53</span>                      push   rbx <span class=\"token punctuation\">;</span> rbx is <span class=\"token function\">s</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n   c<span class=\"token operator\">:</span>   <span class=\"token number\">48</span> <span class=\"token number\">89</span> fb                mov    rbx<span class=\"token punctuation\">,</span>rdi\n   f<span class=\"token operator\">:</span>   e8 <span class=\"token number\">1</span>a <span class=\"token number\">40</span> d0 ff          call   <span class=\"token number\">0xffffffffffd0402e</span>\n  <span class=\"token number\">14</span><span class=\"token operator\">:</span>   <span class=\"token number\">48</span> <span class=\"token number\">85</span> db                test   rbx<span class=\"token punctuation\">,</span>rbx\n  <span class=\"token number\">17</span><span class=\"token operator\">:</span>   <span class=\"token number\">0f</span> <span class=\"token number\">84</span> <span class=\"token number\">8</span>e <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>       je     <span class=\"token number\">0xab</span> <span class=\"token punctuation\">;</span> maybe the end of function\n  <span class=\"token number\">1</span>d<span class=\"token operator\">:</span>   e8 <span class=\"token number\">0</span>c <span class=\"token number\">40</span> d0 ff          call   <span class=\"token number\">0xffffffffffd0402e</span>\n  <span class=\"token number\">22</span><span class=\"token operator\">:</span>   <span class=\"token number\">4</span>c <span class=\"token number\">8</span>b <span class=\"token number\">2</span>b                mov    r13<span class=\"token punctuation\">,</span>QWORD PTR <span class=\"token punctuation\">[</span>rbx<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> s <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>s\n  <span class=\"token number\">25</span><span class=\"token operator\">:</span>   <span class=\"token number\">44</span> <span class=\"token number\">89</span> e0                mov    eax<span class=\"token punctuation\">,</span>r12d <span class=\"token punctuation\">;</span> r12d is sid<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span>\n  <span class=\"token number\">28</span><span class=\"token operator\">:</span>   <span class=\"token number\">83</span> e0 <span class=\"token number\">7f</span>                and    eax<span class=\"token punctuation\">,</span><span class=\"token number\">0x7f</span> <span class=\"token punctuation\">;</span> sid <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x7f</span>       <span class=\"token punctuation\">;</span> hvalue <span class=\"token operator\">=</span> <span class=\"token function\">SIDTAB_HASH</span><span class=\"token punctuation\">(</span>sid<span class=\"token punctuation\">)</span>\n  <span class=\"token number\">2</span>b<span class=\"token operator\">:</span>  <span class=\"token operator\">*</span><span class=\"token number\">49</span> <span class=\"token number\">8</span>b <span class=\"token number\">5</span>c c5 <span class=\"token number\">00</span>          mov    rbx<span class=\"token punctuation\">,</span>QWORD PTR <span class=\"token punctuation\">[</span>r13<span class=\"token operator\">+</span>rax<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">0x0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> cur <span class=\"token operator\">=</span> s<span class=\"token operator\">-></span>htable<span class=\"token punctuation\">[</span>hvalue<span class=\"token punctuation\">]</span> \n  <span class=\"token number\">30</span><span class=\"token operator\">:</span>   <span class=\"token number\">48</span> <span class=\"token number\">85</span> db                test   rbx<span class=\"token punctuation\">,</span>rbx\n  <span class=\"token number\">33</span><span class=\"token operator\">:</span>   <span class=\"token number\">74</span> <span class=\"token number\">28</span>                   je     <span class=\"token number\">0x5d</span>\n  <span class=\"token number\">35</span><span class=\"token operator\">:</span>   e8 f4 <span class=\"token number\">3f</span> d0 ff          call   <span class=\"token number\">0xffffffffffd0402e</span>\n  <span class=\"token number\">3</span>a<span class=\"token operator\">:</span>   <span class=\"token number\">8</span>b <span class=\"token number\">2</span>b                   mov    ebp<span class=\"token punctuation\">,</span>DWORD PTR <span class=\"token punctuation\">[</span>rbx<span class=\"token punctuation\">]</span>\n  <span class=\"token number\">3</span>c<span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">39</span> ec                cmp    r12d<span class=\"token punctuation\">,</span>ebp\n  <span class=\"token number\">3f</span><span class=\"token operator\">:</span>   <span class=\"token number\">77</span>                      <span class=\"token punctuation\">.</span>byte <span class=\"token number\">0x77</span></code></pre></div>\n<p>As following, at line 2b, moving *(r13 + rax * 8 + 0x0) to rbx. r13 is 0, rax is 1, then r13 + rax * 8 + 0x0 = 8.\nWhich means NULL dereference (at 0x8) is confirmed.</p>\n<p>Let's see structure...</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab_node</span> <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>     htable<span class=\"token punctuation\">;</span>               <span class=\"token comment\">/*     0     8 */</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span>               nel<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">/*     8     4 */</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span>               next_sid<span class=\"token punctuation\">;</span>             <span class=\"token comment\">/*    12     4 */</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span>              shutdown<span class=\"token punctuation\">;</span>             <span class=\"token comment\">/*    16     1 */</span>\n\n\t<span class=\"token comment\">/* XXX 7 bytes hole, try to pack */</span>\n\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab_node</span> <span class=\"token operator\">*</span>       cache<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">/*    24    24 */</span>\n\t<span class=\"token class-name\">spinlock_t</span>                 lock<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">/*    48    56 */</span>\n\t<span class=\"token comment\">/* --- cacheline 1 boundary (64 bytes) was 40 bytes ago --- */</span>\n\n\t<span class=\"token comment\">/* size: 104, cachelines: 2, members: 6 */</span>\n\t<span class=\"token comment\">/* sum members: 97, holes: 1, sum holes: 7 */</span>\n\t<span class=\"token comment\">/* last cacheline: 40 bytes */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab_node</span> <span class=\"token punctuation\">{</span>\n\tu32                        sid<span class=\"token punctuation\">;</span>                  <span class=\"token comment\">/*     0     4 */</span>\n\n\t<span class=\"token comment\">/* XXX 4 bytes hole, try to pack */</span>\n\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">context</span>             context<span class=\"token punctuation\">;</span>              <span class=\"token comment\">/*     8    72 */</span>\n\t<span class=\"token comment\">/* --- cacheline 1 boundary (64 bytes) was 16 bytes ago --- */</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">sidtab_node</span> <span class=\"token operator\">*</span>       next<span class=\"token punctuation\">;</span>                 <span class=\"token comment\">/*    80     8 */</span>\n\n\t<span class=\"token comment\">/* size: 88, cachelines: 2, members: 3 */</span>\n\t<span class=\"token comment\">/* sum members: 84, holes: 1, sum holes: 4 */</span>\n\t<span class=\"token comment\">/* last cacheline: 24 bytes */</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">\tcur <span class=\"token operator\">=</span> s<span class=\"token operator\">-></span>htable<span class=\"token punctuation\">[</span>hvalue<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// line 88 // here </span></code></pre></div>\n<p>then, we found where the problem is. Then, how could it be fixed? &#x26;s->htable (NULL) checking?</p>\n<p>==============</p>\n<p>My analyze is end here! more requires a few effort :0....\nOf course, i have PoC code reproducible, but i'll not upload it! :|</p>\n<p><strong>END</strong></p>","excerpt":"selinux/sidtab_search_core - null dereference by GPF I got this bug with 'syzkaller' about a month ago (on v4.15.0-rc4) and have forgotten …","tableOfContents":"<ul>\n<li>\n<p><a href=\"#selinuxsidtab_search_core---null-dereference-by-gpf\">selinux/sidtab_search_core - null dereference by GPF</a></p>\n<ul>\n<li><a href=\"#bug\">Bug</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/2018-01-Founds/"},"frontmatter":{"title":"Linux Kernel - 2018-01 Founds","date":"Jan 18, 2018","tags":["Security","Linux-Kernel"],"keywords":["0-day","Bug"],"update":"Jan 18, 2018"},"timeToRead":6}},"pageContext":{"slug":"/2018-01-Founds/","series":[],"lastmod":"2018-01-18"}},
    "staticQueryHashes": ["2027115977","2744905544","694178885"]}