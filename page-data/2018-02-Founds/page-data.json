{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/2018-02-Founds/",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"getsockopt---task-hung-in-lock_sock_nested\" style=\"position:relative;\"><a href=\"#getsockopt---task-hung-in-lock_sock_nested\" aria-label=\"getsockopt   task hung in lock_sock_nested permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getsockopt - task hung in lock_sock_nested</h2>\n<p>Posting in a long time :) because of other stuff. I have a few LK bugs but skip it :).</p>\n<p>I just found a bug, task hung in lock_sock_nested on the latest LK (v4.16.0-rc1). Of course, from the conclusion, it's not a critical and meaningless bug for me :(.\nSo I just added a short PoC that can reproduce a bug and Call Trace.</p>\n<h3 id=\"call-trace-dump\" style=\"position:relative;\"><a href=\"#call-trace-dump\" aria-label=\"call trace dump permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call Trace (Dump)</h3>\n<p>Here's a Call Trace. task hung (default 120s).</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">root@zer0day<span class=\"token operator\">:</span><span class=\"token operator\">~</span># uname <span class=\"token operator\">-</span>a\nLinux zer0day <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc1<span class=\"token operator\">+</span> #<span class=\"token number\">14</span> SMP Wed Feb <span class=\"token number\">14</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">44</span><span class=\"token operator\">:</span><span class=\"token number\">19</span> KST <span class=\"token number\">2018</span> x86_64 GNU<span class=\"token operator\">/</span>Linux\nroot@zer0day<span class=\"token operator\">:</span><span class=\"token operator\">~</span># gcc <span class=\"token operator\">-</span>o poc poc<span class=\"token punctuation\">.</span>c\nroot@zer0day<span class=\"token operator\">:</span><span class=\"token operator\">~</span># <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>poc\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.631452</span><span class=\"token punctuation\">]</span> INFO<span class=\"token operator\">:</span> task poc<span class=\"token operator\">:</span><span class=\"token number\">2481</span> blocked <span class=\"token keyword\">for</span> more than <span class=\"token number\">120</span> seconds<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.633340</span><span class=\"token punctuation\">]</span>       Not tainted <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc1<span class=\"token operator\">+</span> #<span class=\"token number\">14</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.634552</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\"</span> disables this message<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.636478</span><span class=\"token punctuation\">]</span> poc             D13984  <span class=\"token number\">2481</span>   <span class=\"token number\">2464</span> <span class=\"token number\">0x00000000</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.638015</span><span class=\"token punctuation\">]</span> Call Trace<span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.638825</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> __schedule<span class=\"token operator\">+</span><span class=\"token number\">0x2a9</span><span class=\"token operator\">/</span><span class=\"token number\">0xa90</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.639792</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> __local_bh_enable_ip<span class=\"token operator\">+</span><span class=\"token number\">0x7b</span><span class=\"token operator\">/</span><span class=\"token number\">0xe0</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.640823</span><span class=\"token punctuation\">]</span>  schedule<span class=\"token operator\">+</span><span class=\"token number\">0x2a</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.641559</span><span class=\"token punctuation\">]</span>  __lock_sock<span class=\"token operator\">+</span><span class=\"token number\">0xa1</span><span class=\"token operator\">/</span><span class=\"token number\">0x130</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.642395</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> finish_wait<span class=\"token operator\">+</span><span class=\"token number\">0x80</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.643189</span><span class=\"token punctuation\">]</span>  lock_sock_nested<span class=\"token operator\">+</span><span class=\"token number\">0x9f</span><span class=\"token operator\">/</span><span class=\"token number\">0xb0</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.643383</span><span class=\"token punctuation\">]</span>  ipv6_getorigdst<span class=\"token operator\">+</span><span class=\"token number\">0x9e</span><span class=\"token operator\">/</span><span class=\"token number\">0x2c0</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.643572</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> __mutex_unlock_slowpath<span class=\"token operator\">+</span><span class=\"token number\">0x46</span><span class=\"token operator\">/</span><span class=\"token number\">0x2b0</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.643811</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">?</span> nf_getsockopt<span class=\"token operator\">+</span><span class=\"token number\">0x47</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.643996</span><span class=\"token punctuation\">]</span>  nf_getsockopt<span class=\"token operator\">+</span><span class=\"token number\">0x47</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.644185</span><span class=\"token punctuation\">]</span>  ipv6_getsockopt<span class=\"token operator\">+</span><span class=\"token number\">0x10a</span><span class=\"token operator\">/</span><span class=\"token number\">0x170</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.644380</span><span class=\"token punctuation\">]</span>  udpv6_getsockopt<span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.644569</span><span class=\"token punctuation\">]</span>  SyS_getsockopt<span class=\"token operator\">+</span><span class=\"token number\">0x84</span><span class=\"token operator\">/</span><span class=\"token number\">0xf0</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.644754</span><span class=\"token punctuation\">]</span>  do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.644941</span><span class=\"token punctuation\">]</span>  entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.645200</span><span class=\"token punctuation\">]</span> RIP<span class=\"token operator\">:</span> <span class=\"token number\">0033</span><span class=\"token operator\">:</span><span class=\"token number\">0x7f340483008a</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.645376</span><span class=\"token punctuation\">]</span> RSP<span class=\"token operator\">:</span> <span class=\"token number\">002</span>b<span class=\"token operator\">:</span><span class=\"token number\">00007ff</span>d08d09478 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00000206</span> ORIG_RAX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000037</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.645742</span><span class=\"token punctuation\">]</span> RAX<span class=\"token operator\">:</span> ffffffffffffffda RBX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> RCX<span class=\"token operator\">:</span> <span class=\"token number\">00007f</span><span class=\"token number\">340483008</span>a\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.646101</span><span class=\"token punctuation\">]</span> RDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000050</span> RSI<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000029</span> RDI<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000003</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.646443</span><span class=\"token punctuation\">]</span> RBP<span class=\"token operator\">:</span> <span class=\"token number\">00007ff</span>d08d09490 R08<span class=\"token operator\">:</span> <span class=\"token number\">00007ff</span>d08d09480 R09<span class=\"token operator\">:</span> <span class=\"token number\">00007f</span><span class=\"token number\">3404</span>aec2e0\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.646785</span><span class=\"token punctuation\">]</span> R10<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R11<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000206</span> R12<span class=\"token operator\">:</span> <span class=\"token number\">0000000000400450</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.647148</span><span class=\"token punctuation\">]</span> R13<span class=\"token operator\">:</span> <span class=\"token number\">00007ff</span>d08d09570 R14<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R15<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.647499</span><span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.647499</span><span class=\"token punctuation\">]</span> Showing all locks held in the system<span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.647802</span><span class=\"token punctuation\">]</span> <span class=\"token number\">1</span> lock held by khungtaskd<span class=\"token operator\">/</span><span class=\"token number\">439</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.648026</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span>tasklist_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000</span>d02fdb21<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> debug_show_all_locks<span class=\"token operator\">+</span><span class=\"token number\">0x37</span><span class=\"token operator\">/</span><span class=\"token number\">0x1a0</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.648470</span><span class=\"token punctuation\">]</span> <span class=\"token number\">1</span> lock held by rsyslogd<span class=\"token operator\">/</span><span class=\"token number\">2361</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.648687</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>f<span class=\"token operator\">-></span>f_pos_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0000000066</span>b64151<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> __fdget_pos<span class=\"token operator\">+</span><span class=\"token number\">0x52</span><span class=\"token operator\">/</span><span class=\"token number\">0x60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.649092</span><span class=\"token punctuation\">]</span> <span class=\"token number\">2</span> locks held by getty<span class=\"token operator\">/</span><span class=\"token number\">2444</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.649279</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tty<span class=\"token operator\">-></span>ldisc_sem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">++</span><span class=\"token operator\">++</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000004</span>c37478c<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> tty_ldisc_ref_wait<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token operator\">/</span><span class=\"token number\">0x50</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.649714</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ldata<span class=\"token operator\">-></span>atomic_read_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000e92</span>c7245<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> n_tty_read<span class=\"token operator\">+</span><span class=\"token number\">0xec</span><span class=\"token operator\">/</span><span class=\"token number\">0xa60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.650156</span><span class=\"token punctuation\">]</span> <span class=\"token number\">2</span> locks held by getty<span class=\"token operator\">/</span><span class=\"token number\">2445</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.650343</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tty<span class=\"token operator\">-></span>ldisc_sem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">++</span><span class=\"token operator\">++</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000004</span>c37478c<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> tty_ldisc_ref_wait<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token operator\">/</span><span class=\"token number\">0x50</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.650762</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ldata<span class=\"token operator\">-></span>atomic_read_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000e92</span>c7245<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> n_tty_read<span class=\"token operator\">+</span><span class=\"token number\">0xec</span><span class=\"token operator\">/</span><span class=\"token number\">0xa60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.651203</span><span class=\"token punctuation\">]</span> <span class=\"token number\">2</span> locks held by getty<span class=\"token operator\">/</span><span class=\"token number\">2446</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.651390</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tty<span class=\"token operator\">-></span>ldisc_sem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">++</span><span class=\"token operator\">++</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000004</span>c37478c<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> tty_ldisc_ref_wait<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token operator\">/</span><span class=\"token number\">0x50</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.651813</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ldata<span class=\"token operator\">-></span>atomic_read_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000e92</span>c7245<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> n_tty_read<span class=\"token operator\">+</span><span class=\"token number\">0xec</span><span class=\"token operator\">/</span><span class=\"token number\">0xa60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.652256</span><span class=\"token punctuation\">]</span> <span class=\"token number\">2</span> locks held by getty<span class=\"token operator\">/</span><span class=\"token number\">2447</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.652443</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tty<span class=\"token operator\">-></span>ldisc_sem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">++</span><span class=\"token operator\">++</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000004</span>c37478c<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> tty_ldisc_ref_wait<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token operator\">/</span><span class=\"token number\">0x50</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.652864</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ldata<span class=\"token operator\">-></span>atomic_read_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000e92</span>c7245<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> n_tty_read<span class=\"token operator\">+</span><span class=\"token number\">0xec</span><span class=\"token operator\">/</span><span class=\"token number\">0xa60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.653305</span><span class=\"token punctuation\">]</span> <span class=\"token number\">2</span> locks held by getty<span class=\"token operator\">/</span><span class=\"token number\">2448</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.653492</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tty<span class=\"token operator\">-></span>ldisc_sem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">++</span><span class=\"token operator\">++</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000004</span>c37478c<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> tty_ldisc_ref_wait<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token operator\">/</span><span class=\"token number\">0x50</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.653915</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ldata<span class=\"token operator\">-></span>atomic_read_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000e92</span>c7245<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> n_tty_read<span class=\"token operator\">+</span><span class=\"token number\">0xec</span><span class=\"token operator\">/</span><span class=\"token number\">0xa60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.654356</span><span class=\"token punctuation\">]</span> <span class=\"token number\">2</span> locks held by getty<span class=\"token operator\">/</span><span class=\"token number\">2449</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.654542</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tty<span class=\"token operator\">-></span>ldisc_sem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">++</span><span class=\"token operator\">++</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000004</span>c37478c<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> tty_ldisc_ref_wait<span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token operator\">/</span><span class=\"token number\">0x50</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.654961</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ldata<span class=\"token operator\">-></span>atomic_read_lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000e92</span>c7245<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> n_tty_read<span class=\"token operator\">+</span><span class=\"token number\">0xec</span><span class=\"token operator\">/</span><span class=\"token number\">0xa60</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.655424</span><span class=\"token punctuation\">]</span> <span class=\"token number\">1</span> lock held by poc<span class=\"token operator\">/</span><span class=\"token number\">2481</span><span class=\"token operator\">:</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.655599</span><span class=\"token punctuation\">]</span>  #<span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token punctuation\">(</span>sk_lock<span class=\"token operator\">-</span>AF_INET6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000002374</span>a639<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> ipv6_getsockopt<span class=\"token operator\">+</span><span class=\"token number\">0xf2</span><span class=\"token operator\">/</span><span class=\"token number\">0x170</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.656030</span><span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.656108</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">=</span>\n<span class=\"token punctuation\">[</span>  <span class=\"token number\">369.656108</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"bug\" style=\"position:relative;\"><a href=\"#bug\" aria-label=\"bug permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bug</h3>\n<p>With the above Call Trace, I can notice, there is a lock_sock_nested in ipv6_getorigdst where the bug happened.\nAt <strong>/net/ipv6/netfilter/nf_conntrack_l3proto_ipv6.c:233</strong>,</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span>\n<span class=\"token function\">ipv6_getorigdst</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sock</span> <span class=\"token operator\">*</span>sk<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> optval<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> __user <span class=\"token operator\">*</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>len<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">nf_conntrack_tuple</span> tuple <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span>l3num <span class=\"token operator\">=</span> NFPROTO_IPV6 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipv6_pinfo</span> <span class=\"token operator\">*</span>inet6 <span class=\"token operator\">=</span> <span class=\"token function\">inet6_sk</span><span class=\"token punctuation\">(</span>sk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">inet_sock</span> <span class=\"token operator\">*</span>inet <span class=\"token operator\">=</span> <span class=\"token function\">inet_sk</span><span class=\"token punctuation\">(</span>sk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">nf_conntrack_tuple_hash</span> <span class=\"token operator\">*</span>h<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">sockaddr_in6</span> sin6<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">nf_conn</span> <span class=\"token operator\">*</span>ct<span class=\"token punctuation\">;</span>\n\t__be32 flow_label<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> bound_dev_if<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">lock_sock</span><span class=\"token punctuation\">(</span>sk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttuple<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span>u3<span class=\"token punctuation\">.</span>in6 <span class=\"token operator\">=</span> sk<span class=\"token operator\">-></span>sk_v6_rcv_saddr<span class=\"token punctuation\">;</span>\n\ttuple<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">.</span>u<span class=\"token punctuation\">.</span>tcp<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> inet<span class=\"token operator\">-></span>inet_sport<span class=\"token punctuation\">;</span>\n\ttuple<span class=\"token punctuation\">.</span>dst<span class=\"token punctuation\">.</span>u3<span class=\"token punctuation\">.</span>in6 <span class=\"token operator\">=</span> sk<span class=\"token operator\">-></span>sk_v6_daddr<span class=\"token punctuation\">;</span>\n\ttuple<span class=\"token punctuation\">.</span>dst<span class=\"token punctuation\">.</span>u<span class=\"token punctuation\">.</span>tcp<span class=\"token punctuation\">.</span>port <span class=\"token operator\">=</span> inet<span class=\"token operator\">-></span>inet_dport<span class=\"token punctuation\">;</span>\n\ttuple<span class=\"token punctuation\">.</span>dst<span class=\"token punctuation\">.</span>protonum <span class=\"token operator\">=</span> sk<span class=\"token operator\">-></span>sk_protocol<span class=\"token punctuation\">;</span>\n\tbound_dev_if <span class=\"token operator\">=</span> sk<span class=\"token operator\">-></span>sk_bound_dev_if<span class=\"token punctuation\">;</span>\n\tflow_label <span class=\"token operator\">=</span> inet6<span class=\"token operator\">-></span>flow_label<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">release_sock</span><span class=\"token punctuation\">(</span>sk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>As you also know, <strong>lock_sock_nested</strong> looks like below. (<em>subclass</em> is zero in this case))</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">lock_sock_nested</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sock</span> <span class=\"token operator\">*</span>sk<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> subclass<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">might_sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// debug message is printed by this.</span>\n\t<span class=\"token function\">spin_lock_bh</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sk<span class=\"token operator\">-></span>sk_lock<span class=\"token punctuation\">.</span>slock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sk<span class=\"token operator\">-></span>sk_lock<span class=\"token punctuation\">.</span>owned<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">__lock_sock</span><span class=\"token punctuation\">(</span>sk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsk<span class=\"token operator\">-></span>sk_lock<span class=\"token punctuation\">.</span>owned <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">spin_unlock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sk<span class=\"token operator\">-></span>sk_lock<span class=\"token punctuation\">.</span>slock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">/*\n\t * The sk_lock has mutex_lock() semantics here:\n\t */</span>\n\t<span class=\"token function\">mutex_acquire</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sk<span class=\"token operator\">-></span>sk_lock<span class=\"token punctuation\">.</span>dep_map<span class=\"token punctuation\">,</span> subclass<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _RET_IP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">local_bh_enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In short, maybe, there is a task hung in ipv6_getorigdst while holding the socket lock, so it's blocking other tasks too.</p>\n<h3 id=\"poc\" style=\"position:relative;\"><a href=\"#poc\" aria-label=\"poc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>POC</h3>\n<p>Here's a PoC code for reproducing.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_GNU_SOURCE</span> </span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/mman.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/socket.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/syscall.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> s <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// socket@inet6_udp</span>\n\t<span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// getsockopt@inet6_int</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"fifo_open---possible-circular-locking-leading-to-deadlock\" style=\"position:relative;\"><a href=\"#fifo_open---possible-circular-locking-leading-to-deadlock\" aria-label=\"fifo_open   possible circular locking leading to deadlock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fifo_open - possible circular locking (leading to deadlock)</h2>\n<h3 id=\"call-trace-dump-1\" style=\"position:relative;\"><a href=\"#call-trace-dump-1\" aria-label=\"call trace dump 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call Trace (Dump)</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">WARNING<span class=\"token operator\">:</span> possible circular locking dependency detected\n<span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc1<span class=\"token operator\">+</span> #<span class=\"token number\">15</span> Not tainted\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nsyz<span class=\"token operator\">-</span>executor4<span class=\"token operator\">/</span><span class=\"token number\">30664</span> is trying to acquire lock<span class=\"token operator\">:</span>\n <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000</span>c69506f3<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> __pipe_lock fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">83</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000</span>c69506f3<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> fifo_open<span class=\"token operator\">+</span><span class=\"token number\">0x77</span><span class=\"token operator\">/</span><span class=\"token number\">0x3c0</span> fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">921</span>\n\nbut task is already holding lock<span class=\"token operator\">:</span>\n <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000</span>a7717ddc<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> prepare_bprm_creds<span class=\"token operator\">+</span><span class=\"token number\">0x2a</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1389</span>\n\nwhich lock already depends on the new lock<span class=\"token punctuation\">.</span>\n\n\nthe existing dependency <span class=\"token function\">chain</span> <span class=\"token punctuation\">(</span>in reverse order<span class=\"token punctuation\">)</span> is<span class=\"token operator\">:</span>\n\n<span class=\"token operator\">-></span> #<span class=\"token number\">2</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span>\n       lock_trace<span class=\"token operator\">+</span><span class=\"token number\">0x1f</span><span class=\"token operator\">/</span><span class=\"token number\">0x70</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">408</span>\n       proc_pid_stack<span class=\"token operator\">+</span><span class=\"token number\">0x73</span><span class=\"token operator\">/</span><span class=\"token number\">0x120</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">444</span>\n       proc_single_show<span class=\"token operator\">+</span><span class=\"token number\">0x4d</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">747</span>\n       seq_read<span class=\"token operator\">+</span><span class=\"token number\">0x10f</span><span class=\"token operator\">/</span><span class=\"token number\">0x560</span> fs<span class=\"token operator\">/</span>seq_file<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">237</span>\n       __vfs_read<span class=\"token operator\">+</span><span class=\"token number\">0x50</span><span class=\"token operator\">/</span><span class=\"token number\">0x1d0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">411</span>\n       vfs_read<span class=\"token operator\">+</span><span class=\"token number\">0xc0</span><span class=\"token operator\">/</span><span class=\"token number\">0x1a0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">447</span>\n       SYSC_read fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">573</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SyS_read<span class=\"token operator\">+</span><span class=\"token number\">0x60</span><span class=\"token operator\">/</span><span class=\"token number\">0xe0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">566</span>\n       do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n       entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n\n<span class=\"token operator\">-></span> #<span class=\"token number\">1</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span>\n       seq_read<span class=\"token operator\">+</span><span class=\"token number\">0x51</span><span class=\"token operator\">/</span><span class=\"token number\">0x560</span> fs<span class=\"token operator\">/</span>seq_file<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">165</span>\n       do_loop_readv_writev fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">673</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       do_iter_read<span class=\"token operator\">+</span><span class=\"token number\">0x19f</span><span class=\"token operator\">/</span><span class=\"token number\">0x1f0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">897</span>\n       vfs_readv<span class=\"token operator\">+</span><span class=\"token number\">0x96</span><span class=\"token operator\">/</span><span class=\"token number\">0xe0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">959</span>\n       kernel_readv fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">361</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       default_file_splice_read<span class=\"token operator\">+</span><span class=\"token number\">0x241</span><span class=\"token operator\">/</span><span class=\"token number\">0x3e0</span> fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">416</span>\n       do_splice_to<span class=\"token operator\">+</span><span class=\"token number\">0x8c</span><span class=\"token operator\">/</span><span class=\"token number\">0xc0</span> fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">880</span>\n       do_splice fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1173</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SYSC_splice fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1402</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SyS_splice<span class=\"token operator\">+</span><span class=\"token number\">0x7ba</span><span class=\"token operator\">/</span><span class=\"token number\">0x820</span> fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1382</span>\n       do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n       entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n\n<span class=\"token operator\">-></span> #<span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span>\n       __mutex_lock_common kernel<span class=\"token operator\">/</span>locking<span class=\"token operator\">/</span>mutex<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">756</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       __mutex_lock<span class=\"token operator\">+</span><span class=\"token number\">0x7a</span><span class=\"token operator\">/</span><span class=\"token number\">0x9f0</span> kernel<span class=\"token operator\">/</span>locking<span class=\"token operator\">/</span>mutex<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">893</span>\n       __pipe_lock fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">83</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       fifo_open<span class=\"token operator\">+</span><span class=\"token number\">0x77</span><span class=\"token operator\">/</span><span class=\"token number\">0x3c0</span> fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">921</span>\n       do_dentry_open<span class=\"token operator\">+</span><span class=\"token number\">0x276</span><span class=\"token operator\">/</span><span class=\"token number\">0x400</span> fs<span class=\"token operator\">/</span>open<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">752</span>\n       vfs_open<span class=\"token operator\">+</span><span class=\"token number\">0x5d</span><span class=\"token operator\">/</span><span class=\"token number\">0xb0</span> fs<span class=\"token operator\">/</span>open<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">866</span>\n       do_last fs<span class=\"token operator\">/</span>namei<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3378</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       path_openat<span class=\"token operator\">+</span><span class=\"token number\">0x25b</span><span class=\"token operator\">/</span><span class=\"token number\">0x1040</span> fs<span class=\"token operator\">/</span>namei<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3518</span>\n       do_filp_open<span class=\"token operator\">+</span><span class=\"token number\">0xb9</span><span class=\"token operator\">/</span><span class=\"token number\">0x150</span> fs<span class=\"token operator\">/</span>namei<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3553</span>\n       do_open_execat<span class=\"token operator\">+</span><span class=\"token number\">0xa6</span><span class=\"token operator\">/</span><span class=\"token number\">0x200</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">849</span>\n       do_execveat_common<span class=\"token punctuation\">.</span>isra<span class=\"token punctuation\">.</span><span class=\"token number\">32</span><span class=\"token operator\">+</span><span class=\"token number\">0x33d</span><span class=\"token operator\">/</span><span class=\"token number\">0xbb0</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1740</span>\n       do_execve fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1847</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SYSC_execve fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1928</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SyS_execve<span class=\"token operator\">+</span><span class=\"token number\">0x34</span><span class=\"token operator\">/</span><span class=\"token number\">0x40</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1923</span>\n       do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n       entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n\nother info that might help us debug this<span class=\"token operator\">:</span>\n\nChain exists of<span class=\"token operator\">:</span>\n  <span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token operator\">--</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock <span class=\"token operator\">--</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex\n\n Possible unsafe locking scenario<span class=\"token operator\">:</span>\n\n       CPU0                    CPU1\n       <span class=\"token operator\">--</span><span class=\"token operator\">--</span>                    <span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n  <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                               <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                               <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> DEADLOCK <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span></code></pre></div>\n<p>Skip the Call Trace (Stack backtrace).</p>\n<h2 id=\"seq_read---possible-circular-locking-leading-to-deadlock\" style=\"position:relative;\"><a href=\"#seq_read---possible-circular-locking-leading-to-deadlock\" aria-label=\"seq_read   possible circular locking leading to deadlock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>seq_read - possible circular locking (leading to deadlock)</h2>\n<h3 id=\"call-trace-dump-2\" style=\"position:relative;\"><a href=\"#call-trace-dump-2\" aria-label=\"call trace dump 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call Trace (Dump)</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">WARNING<span class=\"token operator\">:</span> possible circular locking dependency detected\n<span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc1<span class=\"token operator\">+</span> #<span class=\"token number\">15</span> Not tainted\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span>\nsyz<span class=\"token operator\">-</span>executor2<span class=\"token operator\">/</span><span class=\"token number\">10621</span> is trying to acquire lock<span class=\"token operator\">:</span>\n <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">00000000</span>dad12130<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> seq_read<span class=\"token operator\">+</span><span class=\"token number\">0x51</span><span class=\"token operator\">/</span><span class=\"token number\">0x560</span> fs<span class=\"token operator\">/</span>seq_file<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">165</span>\n\nbut task is already holding lock<span class=\"token operator\">:</span>\n <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000009e27</span>b116<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> pipe_lock_nested fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">62</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> at<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token number\">000000009e27</span>b116<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> pipe_lock<span class=\"token operator\">+</span><span class=\"token number\">0x25</span><span class=\"token operator\">/</span><span class=\"token number\">0x30</span> fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">70</span>\n\nwhich lock already depends on the new lock<span class=\"token punctuation\">.</span>\n\n\nthe existing dependency <span class=\"token function\">chain</span> <span class=\"token punctuation\">(</span>in reverse order<span class=\"token punctuation\">)</span> is<span class=\"token operator\">:</span>\n\n<span class=\"token operator\">-></span> #<span class=\"token number\">2</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span>\n       __pipe_lock fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">83</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       fifo_open<span class=\"token operator\">+</span><span class=\"token number\">0x77</span><span class=\"token operator\">/</span><span class=\"token number\">0x3c0</span> fs<span class=\"token operator\">/</span>pipe<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">921</span>\n       do_dentry_open<span class=\"token operator\">+</span><span class=\"token number\">0x276</span><span class=\"token operator\">/</span><span class=\"token number\">0x400</span> fs<span class=\"token operator\">/</span>open<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">752</span>\n       vfs_open<span class=\"token operator\">+</span><span class=\"token number\">0x5d</span><span class=\"token operator\">/</span><span class=\"token number\">0xb0</span> fs<span class=\"token operator\">/</span>open<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">866</span>\n       do_last fs<span class=\"token operator\">/</span>namei<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3378</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       path_openat<span class=\"token operator\">+</span><span class=\"token number\">0x25b</span><span class=\"token operator\">/</span><span class=\"token number\">0x1040</span> fs<span class=\"token operator\">/</span>namei<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3518</span>\n       do_filp_open<span class=\"token operator\">+</span><span class=\"token number\">0xb9</span><span class=\"token operator\">/</span><span class=\"token number\">0x150</span> fs<span class=\"token operator\">/</span>namei<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3553</span>\n       do_open_execat<span class=\"token operator\">+</span><span class=\"token number\">0xa6</span><span class=\"token operator\">/</span><span class=\"token number\">0x200</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">849</span>\n       do_execveat_common<span class=\"token punctuation\">.</span>isra<span class=\"token punctuation\">.</span><span class=\"token number\">32</span><span class=\"token operator\">+</span><span class=\"token number\">0x33d</span><span class=\"token operator\">/</span><span class=\"token number\">0xbb0</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1740</span>\n       do_execve fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1847</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SYSC_execve fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1928</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SyS_execve<span class=\"token operator\">+</span><span class=\"token number\">0x34</span><span class=\"token operator\">/</span><span class=\"token number\">0x40</span> fs<span class=\"token operator\">/</span>exec<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1923</span>\n       do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n       entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n\n<span class=\"token operator\">-></span> #<span class=\"token number\">1</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span>\n       lock_trace<span class=\"token operator\">+</span><span class=\"token number\">0x1f</span><span class=\"token operator\">/</span><span class=\"token number\">0x70</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">408</span>\n       proc_pid_stack<span class=\"token operator\">+</span><span class=\"token number\">0x73</span><span class=\"token operator\">/</span><span class=\"token number\">0x120</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">444</span>\n       proc_single_show<span class=\"token operator\">+</span><span class=\"token number\">0x4d</span><span class=\"token operator\">/</span><span class=\"token number\">0x80</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>base<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">747</span>\n       seq_read<span class=\"token operator\">+</span><span class=\"token number\">0x10f</span><span class=\"token operator\">/</span><span class=\"token number\">0x560</span> fs<span class=\"token operator\">/</span>seq_file<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">237</span>\n       __vfs_read<span class=\"token operator\">+</span><span class=\"token number\">0x50</span><span class=\"token operator\">/</span><span class=\"token number\">0x1d0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">411</span>\n       vfs_read<span class=\"token operator\">+</span><span class=\"token number\">0xc0</span><span class=\"token operator\">/</span><span class=\"token number\">0x1a0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">447</span>\n       SYSC_read fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">573</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SyS_read<span class=\"token operator\">+</span><span class=\"token number\">0x60</span><span class=\"token operator\">/</span><span class=\"token number\">0xe0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">566</span>\n       do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n       entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n\n<span class=\"token operator\">-></span> #<span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token operator\">+</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span>\n       __mutex_lock_common kernel<span class=\"token operator\">/</span>locking<span class=\"token operator\">/</span>mutex<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">756</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       __mutex_lock<span class=\"token operator\">+</span><span class=\"token number\">0x7a</span><span class=\"token operator\">/</span><span class=\"token number\">0x9f0</span> kernel<span class=\"token operator\">/</span>locking<span class=\"token operator\">/</span>mutex<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">893</span>\n       seq_read<span class=\"token operator\">+</span><span class=\"token number\">0x51</span><span class=\"token operator\">/</span><span class=\"token number\">0x560</span> fs<span class=\"token operator\">/</span>seq_file<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">165</span>\n       proc_reg_read<span class=\"token operator\">+</span><span class=\"token number\">0x65</span><span class=\"token operator\">/</span><span class=\"token number\">0xc0</span> fs<span class=\"token operator\">/</span>proc<span class=\"token operator\">/</span>inode<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">218</span>\n       do_loop_readv_writev fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">673</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       do_iter_read<span class=\"token operator\">+</span><span class=\"token number\">0x19f</span><span class=\"token operator\">/</span><span class=\"token number\">0x1f0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">897</span>\n       vfs_readv<span class=\"token operator\">+</span><span class=\"token number\">0x96</span><span class=\"token operator\">/</span><span class=\"token number\">0xe0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">959</span>\n       kernel_readv fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">361</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       default_file_splice_read<span class=\"token operator\">+</span><span class=\"token number\">0x241</span><span class=\"token operator\">/</span><span class=\"token number\">0x3e0</span> fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">416</span>\n       do_splice_to<span class=\"token operator\">+</span><span class=\"token number\">0x8c</span><span class=\"token operator\">/</span><span class=\"token number\">0xc0</span> fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">880</span>\n       do_splice fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1173</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SYSC_splice fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1402</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n       SyS_splice<span class=\"token operator\">+</span><span class=\"token number\">0x7ba</span><span class=\"token operator\">/</span><span class=\"token number\">0x820</span> fs<span class=\"token operator\">/</span>splice<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1382</span>\n       do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n       entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\n\nother info that might help us debug this<span class=\"token operator\">:</span>\n\nChain exists of<span class=\"token operator\">:</span>\n  <span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock <span class=\"token operator\">--</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex <span class=\"token operator\">--</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span>\n\n Possible unsafe locking scenario<span class=\"token operator\">:</span>\n\n       CPU0                    CPU1\n       <span class=\"token operator\">--</span><span class=\"token operator\">--</span>                    <span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n  <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                               <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sig<span class=\"token operator\">-></span>cred_guard_mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                               <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>pipe<span class=\"token operator\">-></span>mutex<span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>p<span class=\"token operator\">-></span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> DEADLOCK <span class=\"token operator\">*</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span></code></pre></div>\n<p>Skip the Call Trace (Stack backtrace).</p>\n<h2 id=\"pfifo_fast_enqueue---unable-to-handle-kernel-paging-request\" style=\"position:relative;\"><a href=\"#pfifo_fast_enqueue---unable-to-handle-kernel-paging-request\" aria-label=\"pfifo_fast_enqueue   unable to handle kernel paging request permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pfifo_fast_enqueue - unable to handle kernel paging request</h2>\n<p>I just got this bug from syzkaller today on LK v4.16.0-rc1.</p>\n<h3 id=\"call-trace-dump-3\" style=\"position:relative;\"><a href=\"#call-trace-dump-3\" aria-label=\"call trace dump 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call Trace (Dump)</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">IP<span class=\"token operator\">:</span> qdisc_qstats_cpu_qlen_inc include<span class=\"token operator\">/</span>net<span class=\"token operator\">/</span>sch_generic<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">717</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\nIP<span class=\"token operator\">:</span> pfifo_fast_enqueue<span class=\"token operator\">+</span><span class=\"token number\">0xce</span><span class=\"token operator\">/</span><span class=\"token number\">0x130</span> net<span class=\"token operator\">/</span>sched<span class=\"token operator\">/</span>sch_generic<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">638</span>\nPGD <span class=\"token number\">5f</span><span class=\"token number\">758067</span> P4D <span class=\"token number\">5f</span><span class=\"token number\">758067</span> PUD <span class=\"token number\">5f</span><span class=\"token number\">759067</span> PMD <span class=\"token number\">7f</span>a34067 PTE <span class=\"token number\">800000003</span>a9f7060\nOops<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> <span class=\"token punctuation\">[</span>#<span class=\"token number\">1</span><span class=\"token punctuation\">]</span> SMP DEBUG_PAGEALLOC PTI\nDumping ftrace buffer<span class=\"token operator\">:</span>\n   <span class=\"token punctuation\">(</span>ftrace buffer empty<span class=\"token punctuation\">)</span>\nModules linked in<span class=\"token operator\">:</span>\nCPU<span class=\"token operator\">:</span> <span class=\"token number\">0</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">2766</span> Comm<span class=\"token operator\">:</span> syz<span class=\"token operator\">-</span>fuzzer Not tainted <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc1<span class=\"token operator\">+</span> #<span class=\"token number\">17</span>\nHardware name<span class=\"token operator\">:</span> QEMU Standard <span class=\"token function\">PC</span> <span class=\"token punctuation\">(</span>i440FX <span class=\"token operator\">+</span> PIIX<span class=\"token punctuation\">,</span> <span class=\"token number\">1996</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BIOS Ubuntu<span class=\"token operator\">-</span><span class=\"token number\">1.8</span><span class=\"token number\">.2</span><span class=\"token operator\">-</span><span class=\"token number\">1u</span>buntu1 <span class=\"token number\">04</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">2014</span>\nRIP<span class=\"token operator\">:</span> <span class=\"token number\">0010</span><span class=\"token operator\">:</span>qdisc_qstats_cpu_qlen_inc include<span class=\"token operator\">/</span>net<span class=\"token operator\">/</span>sch_generic<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">717</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\nRIP<span class=\"token operator\">:</span> <span class=\"token number\">0010</span><span class=\"token operator\">:</span>pfifo_fast_enqueue<span class=\"token operator\">+</span><span class=\"token number\">0xce</span><span class=\"token operator\">/</span><span class=\"token number\">0x130</span> net<span class=\"token operator\">/</span>sched<span class=\"token operator\">/</span>sch_generic<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">638</span>\nRSP<span class=\"token operator\">:</span> <span class=\"token number\">0018</span><span class=\"token operator\">:</span>ffffb1ffc13df8e8 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00010207</span>\nRAX<span class=\"token operator\">:</span> <span class=\"token number\">0000472</span>b4040eaa4 RBX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> RCX<span class=\"token operator\">:</span> ffffffff8af3a141\nRDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> RSI<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000005</span> RDI<span class=\"token operator\">:</span> ffff8ad479d17b08\nRBP<span class=\"token operator\">:</span> ffff8ad479d178c0 R08<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R09<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\nR10<span class=\"token operator\">:</span> ffffb1ffc13df868 R11<span class=\"token operator\">:</span> <span class=\"token number\">5</span>aaeccbc2ff5acd1 R12<span class=\"token operator\">:</span> ffff8ad479d17800\nR13<span class=\"token operator\">:</span> ffff8ad43a9f7f00 R14<span class=\"token operator\">:</span> ffff8ad479d17b08 R15<span class=\"token operator\">:</span> ffffb1ffc13df958\nFS<span class=\"token operator\">:</span>  <span class=\"token number\">00007ff</span><span class=\"token number\">075</span>d99700<span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> GS<span class=\"token operator\">:</span><span class=\"token function\">ffff8ad43fc00000</span><span class=\"token punctuation\">(</span><span class=\"token number\">0000</span><span class=\"token punctuation\">)</span> knlGS<span class=\"token operator\">:</span><span class=\"token number\">0000000000000000</span>\nCS<span class=\"token operator\">:</span>  <span class=\"token number\">0010</span> DS<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> ES<span class=\"token operator\">:</span> <span class=\"token number\">0000</span> CR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000080050033</span>\nCR2<span class=\"token operator\">:</span> ffff8ad43a9f7f28 CR3<span class=\"token operator\">:</span> <span class=\"token number\">000000007</span>a882000 CR4<span class=\"token operator\">:</span> <span class=\"token number\">00000000000006f</span><span class=\"token number\">0</span>\nDR0<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR1<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR2<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\nDR3<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> DR6<span class=\"token operator\">:</span> <span class=\"token number\">00000000fff</span>e0ff0 DR7<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000400</span>\nCall Trace<span class=\"token operator\">:</span>\n __dev_xmit_skb net<span class=\"token operator\">/</span>core<span class=\"token operator\">/</span>dev<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3209</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n __dev_queue_xmit<span class=\"token operator\">+</span><span class=\"token number\">0x331</span><span class=\"token operator\">/</span><span class=\"token number\">0xd80</span> net<span class=\"token operator\">/</span>core<span class=\"token operator\">/</span>dev<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3510</span>\n neigh_hh_output include<span class=\"token operator\">/</span>net<span class=\"token operator\">/</span>neighbour<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">472</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n neigh_output include<span class=\"token operator\">/</span>net<span class=\"token operator\">/</span>neighbour<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">480</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n ip_finish_output2<span class=\"token operator\">+</span><span class=\"token number\">0x5d8</span><span class=\"token operator\">/</span><span class=\"token number\">0x7d0</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>ip_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">229</span>\n ip_finish_output<span class=\"token operator\">+</span><span class=\"token number\">0x246</span><span class=\"token operator\">/</span><span class=\"token number\">0x3d0</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>ip_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">317</span>\n NF_HOOK_COND include<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>netfilter<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">277</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n ip_output<span class=\"token operator\">+</span><span class=\"token number\">0x8a</span><span class=\"token operator\">/</span><span class=\"token number\">0x2e0</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>ip_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">405</span>\n dst_output include<span class=\"token operator\">/</span>net<span class=\"token operator\">/</span>dst<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">443</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n ip_local_out<span class=\"token operator\">+</span><span class=\"token number\">0x4e</span><span class=\"token operator\">/</span><span class=\"token number\">0xa0</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>ip_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">124</span>\n ip_queue_xmit<span class=\"token operator\">+</span><span class=\"token number\">0x289</span><span class=\"token operator\">/</span><span class=\"token number\">0x760</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>ip_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">504</span>\n tcp_transmit_skb<span class=\"token operator\">+</span><span class=\"token number\">0x645</span><span class=\"token operator\">/</span><span class=\"token number\">0xd60</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>tcp_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1176</span>\n tcp_send_ack<span class=\"token punctuation\">.</span>part<span class=\"token punctuation\">.</span><span class=\"token number\">42</span><span class=\"token operator\">+</span><span class=\"token number\">0xd4</span><span class=\"token operator\">/</span><span class=\"token number\">0x160</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>tcp_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3619</span>\n tcp_send_ack<span class=\"token operator\">+</span><span class=\"token number\">0x1e</span><span class=\"token operator\">/</span><span class=\"token number\">0x30</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>tcp_output<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">3589</span>\n tcp_cleanup_rbuf<span class=\"token operator\">+</span><span class=\"token number\">0x88</span><span class=\"token operator\">/</span><span class=\"token number\">0x180</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>tcp<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">1605</span>\n tcp_recvmsg<span class=\"token operator\">+</span><span class=\"token number\">0x45c</span><span class=\"token operator\">/</span><span class=\"token number\">0xf00</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>tcp<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">2022</span>\n inet_recvmsg<span class=\"token operator\">+</span><span class=\"token number\">0x78</span><span class=\"token operator\">/</span><span class=\"token number\">0x270</span> net<span class=\"token operator\">/</span>ipv4<span class=\"token operator\">/</span>af_inet<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">796</span>\n sock_recvmsg_nosec net<span class=\"token operator\">/</span>socket<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">803</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n sock_recvmsg<span class=\"token operator\">+</span><span class=\"token number\">0x47</span><span class=\"token operator\">/</span><span class=\"token number\">0x60</span> net<span class=\"token operator\">/</span>socket<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">810</span>\n sock_read_iter<span class=\"token operator\">+</span><span class=\"token number\">0xb2</span><span class=\"token operator\">/</span><span class=\"token number\">0x120</span> net<span class=\"token operator\">/</span>socket<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">887</span>\n call_read_iter include<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>fs<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">1775</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n new_sync_read fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">401</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n __vfs_read<span class=\"token operator\">+</span><span class=\"token number\">0x169</span><span class=\"token operator\">/</span><span class=\"token number\">0x1d0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">413</span>\n vfs_read<span class=\"token operator\">+</span><span class=\"token number\">0xc0</span><span class=\"token operator\">/</span><span class=\"token number\">0x1a0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">447</span>\n SYSC_read fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">573</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span>\n SyS_read<span class=\"token operator\">+</span><span class=\"token number\">0x60</span><span class=\"token operator\">/</span><span class=\"token number\">0xe0</span> fs<span class=\"token operator\">/</span>read_write<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">566</span>\n do_syscall_64<span class=\"token operator\">+</span><span class=\"token number\">0x74</span><span class=\"token operator\">/</span><span class=\"token number\">0x210</span> arch<span class=\"token operator\">/</span>x86<span class=\"token operator\">/</span>entry<span class=\"token operator\">/</span>common<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">287</span>\n entry_SYSCALL_64_after_hwframe<span class=\"token operator\">+</span><span class=\"token number\">0x26</span><span class=\"token operator\">/</span><span class=\"token number\">0x9b</span>\nRIP<span class=\"token operator\">:</span> <span class=\"token number\">0033</span><span class=\"token operator\">:</span><span class=\"token number\">0x488864</span>\nRSP<span class=\"token operator\">:</span> <span class=\"token number\">002</span>b<span class=\"token operator\">:</span><span class=\"token number\">000000</span>c4204a99a8 EFLAGS<span class=\"token operator\">:</span> <span class=\"token number\">00000246</span> ORIG_RAX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\nRAX<span class=\"token operator\">:</span> ffffffffffffffda RBX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> RCX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000488864</span>\nRDX<span class=\"token operator\">:</span> <span class=\"token number\">0000000000001000</span> RSI<span class=\"token operator\">:</span> <span class=\"token number\">000000</span>c4203c1000 RDI<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000003</span>\nRBP<span class=\"token operator\">:</span> <span class=\"token number\">000000</span>c4204a99f8 R08<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R09<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\nR10<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> R11<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000246</span> R12<span class=\"token operator\">:</span> <span class=\"token number\">000000</span>c425859aa0\nR13<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000001</span> R14<span class=\"token operator\">:</span> <span class=\"token number\">000000</span>c42449b260 R15<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span>\nCode<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">39</span> <span class=\"token number\">83</span> <span class=\"token number\">40</span> <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">7</span>d <span class=\"token number\">67</span> e8 <span class=\"token number\">7</span>e <span class=\"token number\">48</span> <span class=\"token number\">63</span> ff <span class=\"token number\">4</span>c <span class=\"token number\">89</span> f7 e8 <span class=\"token number\">46</span> <span class=\"token number\">2f</span> <span class=\"token number\">37</span> <span class=\"token number\">00</span> <span class=\"token number\">31</span> db e8 <span class=\"token number\">6f</span> <span class=\"token number\">48</span> <span class=\"token number\">63</span> ff <span class=\"token number\">49</span> <span class=\"token number\">8</span>b <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">58</span> <span class=\"token number\">65</span> ff <span class=\"token number\">00</span> <span class=\"token number\">49</span> <span class=\"token number\">8</span>b <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">58</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">41</span><span class=\"token operator\">></span> <span class=\"token number\">8</span>b <span class=\"token number\">55</span> <span class=\"token number\">28</span> <span class=\"token number\">65</span> <span class=\"token number\">01</span> <span class=\"token number\">50</span> <span class=\"token number\">04</span> e8 <span class=\"token number\">55</span> <span class=\"token number\">48</span> <span class=\"token number\">63</span> ff <span class=\"token number\">89</span> d8 <span class=\"token number\">5</span>b <span class=\"token number\">5</span>d <span class=\"token number\">41</span> <span class=\"token number\">5</span>c <span class=\"token number\">41</span> <span class=\"token number\">5</span>d \nRIP<span class=\"token operator\">:</span> qdisc_qstats_cpu_qlen_inc include<span class=\"token operator\">/</span>net<span class=\"token operator\">/</span>sch_generic<span class=\"token punctuation\">.</span>h<span class=\"token operator\">:</span><span class=\"token number\">717</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">inline</span><span class=\"token punctuation\">]</span> RSP<span class=\"token operator\">:</span> ffffb1ffc13df8e8\nRIP<span class=\"token operator\">:</span> pfifo_fast_enqueue<span class=\"token operator\">+</span><span class=\"token number\">0xce</span><span class=\"token operator\">/</span><span class=\"token number\">0x130</span> net<span class=\"token operator\">/</span>sched<span class=\"token operator\">/</span>sch_generic<span class=\"token punctuation\">.</span>c<span class=\"token operator\">:</span><span class=\"token number\">638</span> RSP<span class=\"token operator\">:</span> ffffb1ffc13df8e8\nCR2<span class=\"token operator\">:</span> ffff8ad43a9f7f28\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token punctuation\">[</span> end trace a3bf459ad1c9376d <span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span></code></pre></div>\n<p>RIP is pointing at pfifo_fast_enqueue.</p>\n<h3 id=\"bug-1\" style=\"position:relative;\"><a href=\"#bug-1\" aria-label=\"bug 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bug</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">pfifo_fast_enqueue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sk_buff</span> <span class=\"token operator\">*</span>skb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Qdisc</span> <span class=\"token operator\">*</span>qdisc<span class=\"token punctuation\">,</span>\n\t\t\t      <span class=\"token keyword\">struct</span> <span class=\"token class-name\">sk_buff</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>to_free<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> band <span class=\"token operator\">=</span> prio2band<span class=\"token punctuation\">[</span>skb<span class=\"token operator\">-></span>priority <span class=\"token operator\">&amp;</span> TC_PRIO_MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">pfifo_fast_priv</span> <span class=\"token operator\">*</span>priv <span class=\"token operator\">=</span> <span class=\"token function\">qdisc_priv</span><span class=\"token punctuation\">(</span>qdisc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">skb_array</span> <span class=\"token operator\">*</span>q <span class=\"token operator\">=</span> <span class=\"token function\">band2list</span><span class=\"token punctuation\">(</span>priv<span class=\"token punctuation\">,</span> band<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> err<span class=\"token punctuation\">;</span>\n\n\terr <span class=\"token operator\">=</span> <span class=\"token function\">skb_array_produce</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> skb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">unlikely</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">qdisc_drop_cpu</span><span class=\"token punctuation\">(</span>skb<span class=\"token punctuation\">,</span> qdisc<span class=\"token punctuation\">,</span> to_free<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">qdisc_qstats_cpu_qlen_inc</span><span class=\"token punctuation\">(</span>qdisc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">qdisc_qstats_cpu_backlog_inc</span><span class=\"token punctuation\">(</span>qdisc<span class=\"token punctuation\">,</span> skb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> NET_XMIT_SUCCESS<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">qdisc_qstats_cpu_qlen_inc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Qdisc</span> <span class=\"token operator\">*</span>sch<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">this_cpu_inc</span><span class=\"token punctuation\">(</span>sch<span class=\"token operator\">-></span>cpu_qstats<span class=\"token operator\">-></span>qlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// equals to this_cpu_add(sch->cpu_qstats->qlen, 1);</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">qdisc_qstats_cpu_backlog_inc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Qdisc</span> <span class=\"token operator\">*</span>sch<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">sk_buff</span> <span class=\"token operator\">*</span>skb<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">this_cpu_add</span><span class=\"token punctuation\">(</span>sch<span class=\"token operator\">-></span>cpu_qstats<span class=\"token operator\">-></span>backlog<span class=\"token punctuation\">,</span> <span class=\"token function\">qdisc_pkt_len</span><span class=\"token punctuation\">(</span>skb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">   <span class=\"token number\">0</span><span class=\"token operator\">:</span>   <span class=\"token number\">00</span> <span class=\"token number\">00</span>                   add    BYTE PTR <span class=\"token punctuation\">[</span>rax<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>al\n   <span class=\"token number\">2</span><span class=\"token operator\">:</span>   <span class=\"token number\">39</span> <span class=\"token number\">83</span> <span class=\"token number\">40</span> <span class=\"token number\">02</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>       cmp    DWORD PTR <span class=\"token punctuation\">[</span>rbx<span class=\"token operator\">+</span><span class=\"token number\">0x240</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>eax <span class=\"token punctuation\">;</span> <span class=\"token function\">unlikely</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n   <span class=\"token number\">8</span><span class=\"token operator\">:</span>   <span class=\"token number\">7</span>d <span class=\"token number\">67</span>                   jge    <span class=\"token number\">0x71</span> <span class=\"token punctuation\">;</span> maybe errout\n   a<span class=\"token operator\">:</span>   e8 <span class=\"token number\">7</span>e <span class=\"token number\">48</span> <span class=\"token number\">63</span> ff          call   <span class=\"token number\">0xffffffffff63488d</span> <span class=\"token punctuation\">;</span> this_cpu_add\n   f<span class=\"token operator\">:</span>   <span class=\"token number\">4</span>c <span class=\"token number\">89</span> f7                mov    rdi<span class=\"token punctuation\">,</span>r14\n  <span class=\"token number\">12</span><span class=\"token operator\">:</span>   e8 <span class=\"token number\">46</span> <span class=\"token number\">2f</span> <span class=\"token number\">37</span> <span class=\"token number\">00</span>          call   <span class=\"token number\">0x372f5d</span>\n  <span class=\"token number\">17</span><span class=\"token operator\">:</span>   <span class=\"token number\">31</span> db                   xor    ebx<span class=\"token punctuation\">,</span>ebx <span class=\"token punctuation\">;</span> ebx <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token number\">19</span><span class=\"token operator\">:</span>   e8 <span class=\"token number\">6f</span> <span class=\"token number\">48</span> <span class=\"token number\">63</span> ff          call   <span class=\"token number\">0xffffffffff63488d</span> <span class=\"token punctuation\">;</span> this_cpu_add\n  <span class=\"token number\">1</span>e<span class=\"token operator\">:</span>   <span class=\"token number\">49</span> <span class=\"token number\">8</span>b <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">58</span>          mov    rax<span class=\"token punctuation\">,</span>QWORD PTR <span class=\"token punctuation\">[</span>r12<span class=\"token operator\">+</span><span class=\"token number\">0x58</span><span class=\"token punctuation\">]</span>\n  <span class=\"token number\">23</span><span class=\"token operator\">:</span>   <span class=\"token number\">65</span> ff <span class=\"token number\">00</span>                inc    DWORD PTR gs<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>rax<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> sch<span class=\"token operator\">-></span>cpu_qstats<span class=\"token operator\">-></span>qlen<span class=\"token punctuation\">,</span> increased by <span class=\"token number\">1</span>\n  <span class=\"token number\">26</span><span class=\"token operator\">:</span>   <span class=\"token number\">49</span> <span class=\"token number\">8</span>b <span class=\"token number\">44</span> <span class=\"token number\">24</span> <span class=\"token number\">58</span>          mov    rax<span class=\"token punctuation\">,</span>QWORD PTR <span class=\"token punctuation\">[</span>r12<span class=\"token operator\">+</span><span class=\"token number\">0x58</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> qdisc\n  <span class=\"token number\">2</span>b<span class=\"token operator\">:</span>  <span class=\"token operator\">*</span><span class=\"token number\">41</span> <span class=\"token number\">8</span>b <span class=\"token number\">55</span> <span class=\"token number\">28</span>             mov    edx<span class=\"token punctuation\">,</span>DWORD PTR <span class=\"token punctuation\">[</span>r13<span class=\"token operator\">+</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span> skb\n  <span class=\"token number\">2f</span><span class=\"token operator\">:</span>   <span class=\"token number\">65</span> <span class=\"token number\">01</span> <span class=\"token number\">50</span> <span class=\"token number\">04</span>             add    DWORD PTR gs<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>rax<span class=\"token operator\">+</span><span class=\"token number\">0x4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>edx\n  <span class=\"token number\">33</span><span class=\"token operator\">:</span>   e8 <span class=\"token number\">55</span> <span class=\"token number\">48</span> <span class=\"token number\">63</span> ff          call   <span class=\"token number\">0xffffffffff63488d</span> <span class=\"token punctuation\">;</span> this_cpu_add\n  <span class=\"token number\">38</span><span class=\"token operator\">:</span>   <span class=\"token number\">89</span> d8                   mov    eax<span class=\"token punctuation\">,</span>ebx <span class=\"token punctuation\">;</span> eax <span class=\"token operator\">=</span> <span class=\"token function\">ebx</span> <span class=\"token punctuation\">(</span>eax <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token number\">3</span>a<span class=\"token operator\">:</span>   <span class=\"token number\">5</span>b                      pop    rbx\n  <span class=\"token number\">3</span>b<span class=\"token operator\">:</span>   <span class=\"token number\">5</span>d                      pop    rbp\n  <span class=\"token number\">3</span>c<span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">5</span>c                   pop    r12\n  <span class=\"token number\">3</span>e<span class=\"token operator\">:</span>   <span class=\"token number\">41</span> <span class=\"token number\">5</span>d                   pop    r13</code></pre></div>\n<p>Generously, 'Unable to handle kernel paging request' bug happened when bad type-casting or invalid pointer exist.</p>\n<p>At 0x2b, there is a crash point. Meaning that accessing [r13+0x28] is violated.  Let's have a look.</p>\n<p>With above Crash Dump, we can notice <strong>r13</strong> is 0x1. At result, in that case, accessing at 0x29 where a invalid page is currently, getting value from there and moving into edx (skb).</p>\n<p>So the bug is happened by above reason.</p>\n<p>Then, why 'r13' is corrupted? Well... digging up more with reproducible PoC and then maybe there's a clear result :).</p>\n<h3 id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h3>\n<p>Maybe, more strict pointer validation is needed at qdisc &#x26; skb. Here's my suggested patch PoC code. (not verified).</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">pfifo_fast_enqueue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">sk_buff</span> <span class=\"token operator\">*</span>skb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Qdisc</span> <span class=\"token operator\">*</span>qdisc<span class=\"token punctuation\">,</span>\n\t\t\t      <span class=\"token keyword\">struct</span> <span class=\"token class-name\">sk_buff</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>to_free<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> band <span class=\"token operator\">=</span> prio2band<span class=\"token punctuation\">[</span>skb<span class=\"token operator\">-></span>priority <span class=\"token operator\">&amp;</span> TC_PRIO_MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">pfifo_fast_priv</span> <span class=\"token operator\">*</span>priv <span class=\"token operator\">=</span> <span class=\"token function\">qdisc_priv</span><span class=\"token punctuation\">(</span>qdisc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">skb_array</span> <span class=\"token operator\">*</span>q <span class=\"token operator\">=</span> <span class=\"token function\">band2list</span><span class=\"token punctuation\">(</span>priv<span class=\"token punctuation\">,</span> band<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> err<span class=\"token punctuation\">;</span>\n\n\terr <span class=\"token operator\">=</span> <span class=\"token function\">skb_array_produce</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> skb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">unlikely</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">qdisc_drop_cpu</span><span class=\"token punctuation\">(</span>skb<span class=\"token punctuation\">,</span> qdisc<span class=\"token punctuation\">,</span> to_free<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>qdisc<span class=\"token punctuation\">)</span> <span class=\"token comment\">// qdisc validation</span>\n\t    <span class=\"token keyword\">return</span> sth<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">qdisc_qstats_cpu_qlen_inc</span><span class=\"token punctuation\">(</span>qdisc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">qdisc_qstats_cpu_backlog_inc</span><span class=\"token punctuation\">(</span>qdisc<span class=\"token punctuation\">,</span> skb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> NET_XMIT_SUCCESS<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"tick_sched_timehandle---alloca-out-of-bounds\" style=\"position:relative;\"><a href=\"#tick_sched_timehandle---alloca-out-of-bounds\" aria-label=\"tick_sched_timehandle   alloca out of bounds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tick_sched_time/handle - alloca Out Of Bounds</h2>\n<p>Got from syzkaller &#x26; Found in LK v4.16.0-rc2~.</p>\n<h3 id=\"call-trace-dump-4\" style=\"position:relative;\"><a href=\"#call-trace-dump-4\" aria-label=\"call trace dump 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Call Trace (Dump)</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">BUG<span class=\"token operator\">:</span> KASAN<span class=\"token operator\">:</span> alloca<span class=\"token operator\">-</span>out<span class=\"token operator\">-</span>of<span class=\"token operator\">-</span>bounds in tick_sched_handle<span class=\"token operator\">+</span><span class=\"token number\">0x165</span><span class=\"token operator\">/</span><span class=\"token number\">0x180</span>\nRead of size <span class=\"token number\">8</span> at addr ffff880022ba7030 by task syz<span class=\"token operator\">-</span>executor5<span class=\"token operator\">/</span><span class=\"token number\">3160</span>\n\nCPU<span class=\"token operator\">:</span> <span class=\"token number\">0</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">3160</span> Comm<span class=\"token operator\">:</span> syz<span class=\"token operator\">-</span>executor5 Not tainted <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc2<span class=\"token operator\">+</span> #<span class=\"token number\">2</span>\nHardware name<span class=\"token operator\">:</span> QEMU Standard <span class=\"token function\">PC</span> <span class=\"token punctuation\">(</span>i440FX <span class=\"token operator\">+</span> PIIX<span class=\"token punctuation\">,</span> <span class=\"token number\">1996</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BIOS <span class=\"token number\">1.10</span><span class=\"token number\">.2</span><span class=\"token operator\">-</span><span class=\"token number\">1u</span>buntu1 <span class=\"token number\">04</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">2014</span>\nCall Trace<span class=\"token operator\">:</span>\n <span class=\"token operator\">&lt;</span>IRQ<span class=\"token operator\">></span>\n dump_stack<span class=\"token operator\">+</span><span class=\"token number\">0x127</span><span class=\"token operator\">/</span><span class=\"token number\">0x213</span>\n print_address_description<span class=\"token operator\">+</span><span class=\"token number\">0x60</span><span class=\"token operator\">/</span><span class=\"token number\">0x22b</span>\n kasan_report<span class=\"token punctuation\">.</span>cold<span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token number\">0xac</span><span class=\"token operator\">/</span><span class=\"token number\">0x2f4</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IRQ<span class=\"token operator\">></span>\n\nThe buggy address belongs to the page<span class=\"token operator\">:</span>\npage<span class=\"token operator\">:</span>ffffea00008ae9c0 count<span class=\"token operator\">:</span><span class=\"token number\">0</span> mapcount<span class=\"token operator\">:</span><span class=\"token number\">0</span> mapping<span class=\"token operator\">:</span>          <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> index<span class=\"token operator\">:</span><span class=\"token number\">0x0</span>\nflags<span class=\"token operator\">:</span> <span class=\"token number\">0x100000000000000</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nraw<span class=\"token operator\">:</span> <span class=\"token number\">0100000000000000</span> <span class=\"token number\">0000000000000000</span> <span class=\"token number\">0000000000000000</span> <span class=\"token number\">00000000ffff</span>ffff\nraw<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> ffffea00008ae9e0 <span class=\"token number\">0000000000000000</span> <span class=\"token number\">0000000000000000</span>\npage dumped because<span class=\"token operator\">:</span> kasan<span class=\"token operator\">:</span> bad access detected\n\nMemory state around the buggy address<span class=\"token operator\">:</span>\n ffff880022ba6f00<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>\n ffff880022ba6f80<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> ca ca ca ca\n<span class=\"token operator\">></span>ffff880022ba7000<span class=\"token operator\">:</span> <span class=\"token number\">02</span> cb cb cb cb cb cb cb <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>\n                                     <span class=\"token operator\">^</span>\n ffff880022ba7080<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> f1 f1 f1\n ffff880022ba7100<span class=\"token operator\">:</span> f1 <span class=\"token number\">02</span> f2 f2 f2 f2 f2 f2 f2 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> f2 f2 f2 f2\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nKernel panic <span class=\"token operator\">-</span> not syncing<span class=\"token operator\">:</span> panic_on_warn set <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nCPU<span class=\"token operator\">:</span> <span class=\"token number\">0</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">3160</span> Comm<span class=\"token operator\">:</span> syz<span class=\"token operator\">-</span>executor5 Tainted<span class=\"token operator\">:</span> G    B            <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc2<span class=\"token operator\">+</span> #<span class=\"token number\">2</span>\nHardware name<span class=\"token operator\">:</span> QEMU Standard <span class=\"token function\">PC</span> <span class=\"token punctuation\">(</span>i440FX <span class=\"token operator\">+</span> PIIX<span class=\"token punctuation\">,</span> <span class=\"token number\">1996</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BIOS <span class=\"token number\">1.10</span><span class=\"token number\">.2</span><span class=\"token operator\">-</span><span class=\"token number\">1u</span>buntu1 <span class=\"token number\">04</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">2014</span>\nCall Trace<span class=\"token operator\">:</span>\n <span class=\"token operator\">&lt;</span>IRQ<span class=\"token operator\">></span>\n dump_stack<span class=\"token operator\">+</span><span class=\"token number\">0x127</span><span class=\"token operator\">/</span><span class=\"token number\">0x213</span>\n panic<span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">/</span><span class=\"token number\">0x46f</span>\n kasan_end_report<span class=\"token operator\">+</span><span class=\"token number\">0x43</span><span class=\"token operator\">/</span><span class=\"token number\">0x49</span>\n kasan_report<span class=\"token punctuation\">.</span>cold<span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token number\">0xc8</span><span class=\"token operator\">/</span><span class=\"token number\">0x2f4</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IRQ<span class=\"token operator\">></span>\nDumping ftrace buffer<span class=\"token operator\">:</span>\n   <span class=\"token punctuation\">(</span>ftrace buffer empty<span class=\"token punctuation\">)</span>\nKernel Offset<span class=\"token operator\">:</span> <span class=\"token number\">0x8e00000</span> from <span class=\"token number\">0xffffffff81000000</span> <span class=\"token punctuation\">(</span>relocation range<span class=\"token operator\">:</span> <span class=\"token number\">0xffffffff80000000</span><span class=\"token operator\">-</span><span class=\"token number\">0xffffffffbfffffff</span><span class=\"token punctuation\">)</span>\nRebooting in <span class=\"token number\">86400</span> seconds<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2018</span><span class=\"token operator\">/</span><span class=\"token number\">02</span><span class=\"token operator\">/</span><span class=\"token number\">24</span> <span class=\"token number\">05</span><span class=\"token operator\">:</span><span class=\"token number\">33</span><span class=\"token operator\">:</span><span class=\"token number\">21</span> reproducing crash <span class=\"token string\">'KASAN: alloca-out-of-bounds Read in tick_sched_handle'</span><span class=\"token operator\">:</span> final repro crashed <span class=\"token function\">as</span> <span class=\"token punctuation\">(</span>corrupted<span class=\"token operator\">=</span>false<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nBUG<span class=\"token operator\">:</span> KASAN<span class=\"token operator\">:</span> alloca<span class=\"token operator\">-</span>out<span class=\"token operator\">-</span>of<span class=\"token operator\">-</span>bounds in tick_sched_handle<span class=\"token operator\">+</span><span class=\"token number\">0x165</span><span class=\"token operator\">/</span><span class=\"token number\">0x180</span>\nRead of size <span class=\"token number\">8</span> at addr ffff880022ba7030 by task syz<span class=\"token operator\">-</span>executor5<span class=\"token operator\">/</span><span class=\"token number\">3160</span>\n\nCPU<span class=\"token operator\">:</span> <span class=\"token number\">0</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">3160</span> Comm<span class=\"token operator\">:</span> syz<span class=\"token operator\">-</span>executor5 Not tainted <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc2<span class=\"token operator\">+</span> #<span class=\"token number\">2</span>\nHardware name<span class=\"token operator\">:</span> QEMU Standard <span class=\"token function\">PC</span> <span class=\"token punctuation\">(</span>i440FX <span class=\"token operator\">+</span> PIIX<span class=\"token punctuation\">,</span> <span class=\"token number\">1996</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BIOS <span class=\"token number\">1.10</span><span class=\"token number\">.2</span><span class=\"token operator\">-</span><span class=\"token number\">1u</span>buntu1 <span class=\"token number\">04</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">2014</span>\nCall Trace<span class=\"token operator\">:</span>\n <span class=\"token operator\">&lt;</span>IRQ<span class=\"token operator\">></span>\n dump_stack<span class=\"token operator\">+</span><span class=\"token number\">0x127</span><span class=\"token operator\">/</span><span class=\"token number\">0x213</span>\n print_address_description<span class=\"token operator\">+</span><span class=\"token number\">0x60</span><span class=\"token operator\">/</span><span class=\"token number\">0x22b</span>\n kasan_report<span class=\"token punctuation\">.</span>cold<span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token number\">0xac</span><span class=\"token operator\">/</span><span class=\"token number\">0x2f4</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IRQ<span class=\"token operator\">></span>\n\nThe buggy address belongs to the page<span class=\"token operator\">:</span>\npage<span class=\"token operator\">:</span>ffffea00008ae9c0 count<span class=\"token operator\">:</span><span class=\"token number\">0</span> mapcount<span class=\"token operator\">:</span><span class=\"token number\">0</span> mapping<span class=\"token operator\">:</span>          <span class=\"token punctuation\">(</span>null<span class=\"token punctuation\">)</span> index<span class=\"token operator\">:</span><span class=\"token number\">0x0</span>\nflags<span class=\"token operator\">:</span> <span class=\"token number\">0x100000000000000</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nraw<span class=\"token operator\">:</span> <span class=\"token number\">0100000000000000</span> <span class=\"token number\">0000000000000000</span> <span class=\"token number\">0000000000000000</span> <span class=\"token number\">00000000ffff</span>ffff\nraw<span class=\"token operator\">:</span> <span class=\"token number\">0000000000000000</span> ffffea00008ae9e0 <span class=\"token number\">0000000000000000</span> <span class=\"token number\">0000000000000000</span>\npage dumped because<span class=\"token operator\">:</span> kasan<span class=\"token operator\">:</span> bad access detected\n\nMemory state around the buggy address<span class=\"token operator\">:</span>\n ffff880022ba6f00<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>\n ffff880022ba6f80<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> ca ca ca ca\n<span class=\"token operator\">></span>ffff880022ba7000<span class=\"token operator\">:</span> <span class=\"token number\">02</span> cb cb cb cb cb cb cb <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span>\n                                     <span class=\"token operator\">^</span>\n ffff880022ba7080<span class=\"token operator\">:</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> f1 f1 f1\n ffff880022ba7100<span class=\"token operator\">:</span> f1 <span class=\"token number\">02</span> f2 f2 f2 f2 f2 f2 f2 <span class=\"token number\">00</span> <span class=\"token number\">00</span> <span class=\"token number\">00</span> f2 f2 f2 f2\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nKernel panic <span class=\"token operator\">-</span> not syncing<span class=\"token operator\">:</span> panic_on_warn set <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\nCPU<span class=\"token operator\">:</span> <span class=\"token number\">0</span> PID<span class=\"token operator\">:</span> <span class=\"token number\">3160</span> Comm<span class=\"token operator\">:</span> syz<span class=\"token operator\">-</span>executor5 Tainted<span class=\"token operator\">:</span> G    B            <span class=\"token number\">4.16</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>rc2<span class=\"token operator\">+</span> #<span class=\"token number\">2</span>\nHardware name<span class=\"token operator\">:</span> QEMU Standard <span class=\"token function\">PC</span> <span class=\"token punctuation\">(</span>i440FX <span class=\"token operator\">+</span> PIIX<span class=\"token punctuation\">,</span> <span class=\"token number\">1996</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BIOS <span class=\"token number\">1.10</span><span class=\"token number\">.2</span><span class=\"token operator\">-</span><span class=\"token number\">1u</span>buntu1 <span class=\"token number\">04</span><span class=\"token operator\">/</span><span class=\"token number\">01</span><span class=\"token operator\">/</span><span class=\"token number\">2014</span>\nCall Trace<span class=\"token operator\">:</span>\n <span class=\"token operator\">&lt;</span>IRQ<span class=\"token operator\">></span>\n dump_stack<span class=\"token operator\">+</span><span class=\"token number\">0x127</span><span class=\"token operator\">/</span><span class=\"token number\">0x213</span>\n panic<span class=\"token operator\">+</span><span class=\"token number\">0x1f8</span><span class=\"token operator\">/</span><span class=\"token number\">0x46f</span>\n kasan_end_report<span class=\"token operator\">+</span><span class=\"token number\">0x43</span><span class=\"token operator\">/</span><span class=\"token number\">0x49</span>\n kasan_report<span class=\"token punctuation\">.</span>cold<span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token number\">0xc8</span><span class=\"token operator\">/</span><span class=\"token number\">0x2f4</span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IRQ<span class=\"token operator\">></span>\nDumping ftrace buffer<span class=\"token operator\">:</span>\n   <span class=\"token punctuation\">(</span>ftrace buffer empty<span class=\"token punctuation\">)</span>\nKernel Offset<span class=\"token operator\">:</span> <span class=\"token number\">0x8e00000</span> from <span class=\"token number\">0xffffffff81000000</span> <span class=\"token punctuation\">(</span>relocation range<span class=\"token operator\">:</span> <span class=\"token number\">0xffffffff80000000</span><span class=\"token operator\">-</span><span class=\"token number\">0xffffffffbfffffff</span><span class=\"token punctuation\">)</span>\nRebooting in <span class=\"token number\">86400</span> seconds<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<h3 id=\"poc-1\" style=\"position:relative;\"><a href=\"#poc-1\" aria-label=\"poc 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PoC</h3>\n<p>generated by syz-repro.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">_GNU_SOURCE</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;endian.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/syscall.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;errno.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;signal.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdarg.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/time.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/wait.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/prctl.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;dirent.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/mount.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;arpa/inet.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;errno.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/if.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/if_ether.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/if_tun.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/ip.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/tcp.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;net/if_arp.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdarg.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdbool.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/ioctl.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/stat.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/uio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/net.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;netinet/in.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/socket.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/ioctl.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/stat.h></span></span>\n\n<span class=\"token keyword\">__attribute__</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>noreturn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doexit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> status<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">volatile</span> <span class=\"token keyword\">unsigned</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_exit_group<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;errno.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdarg.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/stat.h></span></span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> kFailStatus <span class=\"token operator\">=</span> <span class=\"token number\">67</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> kRetryStatus <span class=\"token operator\">=</span> <span class=\"token number\">69</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> msg<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> e <span class=\"token operator\">=</span> errno<span class=\"token punctuation\">;</span>\n\tva_list args<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">va_start</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">vfprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">va_end</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" (errno %d)\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">doexit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">==</span> ENOMEM <span class=\"token operator\">||</span> e <span class=\"token operator\">==</span> EAGAIN<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> kRetryStatus <span class=\"token operator\">:</span> kFailStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> msg<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> e <span class=\"token operator\">=</span> errno<span class=\"token punctuation\">;</span>\n\tva_list args<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">va_start</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">vfprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">va_end</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" (errno %d)\\n\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">doexit</span><span class=\"token punctuation\">(</span>kRetryStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">uint64_t</span> <span class=\"token function\">current_time_ms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">timespec</span> ts<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">clock_gettime</span><span class=\"token punctuation\">(</span>CLOCK_MONOTONIC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clock_gettime failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token punctuation\">)</span>ts<span class=\"token punctuation\">.</span>tv_sec <span class=\"token operator\">*</span> <span class=\"token number\">1000</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token punctuation\">)</span>ts<span class=\"token punctuation\">.</span>tv_nsec <span class=\"token operator\">/</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">use_temporary_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> tmpdir_template<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"./syzkaller.XXXXXX\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> tmpdir <span class=\"token operator\">=</span> <span class=\"token function\">mkdtemp</span><span class=\"token punctuation\">(</span>tmpdir_template<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tmpdir<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to mkdtemp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span>tmpdir<span class=\"token punctuation\">,</span> <span class=\"token number\">0777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to chmod\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span>tmpdir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to chdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">vsnprintf_check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> str<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> size<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> format<span class=\"token punctuation\">,</span> va_list args<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> rv<span class=\"token punctuation\">;</span>\n\n\trv <span class=\"token operator\">=</span> <span class=\"token function\">vsnprintf</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rv <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: snprintf failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">size_t</span><span class=\"token punctuation\">)</span>rv <span class=\"token operator\">>=</span> size<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: string '%s...' doesn't fit into buffer\"</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">snprintf_check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> str<span class=\"token punctuation\">,</span> <span class=\"token class-name\">size_t</span> size<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> format<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tva_list args<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">va_start</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">vsnprintf_check</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">va_end</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">COMMAND_MAX_LEN</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATH_PREFIX</span> <span class=\"token string\">\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">PATH_PREFIX_LEN</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PATH_PREFIX<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span>bool panic<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> format<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tva_list args<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> command<span class=\"token punctuation\">[</span>PATH_PREFIX_LEN <span class=\"token operator\">+</span> COMMAND_MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> rv<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">va_start</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">,</span> PATH_PREFIX<span class=\"token punctuation\">,</span> PATH_PREFIX_LEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">vsnprintf_check</span><span class=\"token punctuation\">(</span>command <span class=\"token operator\">+</span> PATH_PREFIX_LEN<span class=\"token punctuation\">,</span> COMMAND_MAX_LEN<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trv <span class=\"token operator\">=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>panic <span class=\"token operator\">&amp;&amp;</span> rv <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: command \\\"%s\\\" failed with code %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>command<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">va_end</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> tunfd <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> tun_frags_enabled<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">SYZ_TUN_MAX_PACKET_SIZE</span> <span class=\"token expression\"><span class=\"token number\">1000</span></span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">TUN_IFACE</span> <span class=\"token string\">\"syz_tun\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOCAL_MAC</span> <span class=\"token string\">\"aa:aa:aa:aa:aa:aa\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">REMOTE_MAC</span> <span class=\"token string\">\"aa:aa:aa:aa:aa:bb\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOCAL_IPV4</span> <span class=\"token string\">\"172.20.20.170\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">REMOTE_IPV4</span> <span class=\"token string\">\"172.20.20.187\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">LOCAL_IPV6</span> <span class=\"token string\">\"fe80::aa\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">REMOTE_IPV6</span> <span class=\"token string\">\"fe80::bb\"</span></span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IFF_NAPI</span> <span class=\"token expression\"><span class=\"token number\">0x0010</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IFF_NAPI_FRAGS</span> <span class=\"token expression\"><span class=\"token number\">0x0020</span></span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize_tun</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\ttunfd <span class=\"token operator\">=</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/dev/net/tun\"</span><span class=\"token punctuation\">,</span> O_RDWR <span class=\"token operator\">|</span> O_NONBLOCK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tunfd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: can't open /dev/net/tun: please enable CONFIG_TUN=y\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"otherwise fuzzing or reproducing might not work as intended\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> kTunFd <span class=\"token operator\">=</span> <span class=\"token number\">252</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">dup2</span><span class=\"token punctuation\">(</span>tunfd<span class=\"token punctuation\">,</span> kTunFd<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dup2(tunfd, kTunFd) failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>tunfd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttunfd <span class=\"token operator\">=</span> kTunFd<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ifreq</span> ifr<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ifr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ifr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">strncpy</span><span class=\"token punctuation\">(</span>ifr<span class=\"token punctuation\">.</span>ifr_name<span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">,</span> IFNAMSIZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tifr<span class=\"token punctuation\">.</span>ifr_flags <span class=\"token operator\">=</span> IFF_TAP <span class=\"token operator\">|</span> IFF_NO_PI <span class=\"token operator\">|</span> IFF_NAPI <span class=\"token operator\">|</span> IFF_NAPI_FRAGS<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ioctl</span><span class=\"token punctuation\">(</span>tunfd<span class=\"token punctuation\">,</span> TUNSETIFF<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ifr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tifr<span class=\"token punctuation\">.</span>ifr_flags <span class=\"token operator\">=</span> IFF_TAP <span class=\"token operator\">|</span> IFF_NO_PI<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ioctl</span><span class=\"token punctuation\">(</span>tunfd<span class=\"token punctuation\">,</span> TUNSETIFF<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ifr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: ioctl(TUNSETIFF) failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ioctl</span><span class=\"token punctuation\">(</span>tunfd<span class=\"token punctuation\">,</span> TUNGETIFF<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>ifr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: ioctl(TUNGETIFF) failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttun_frags_enabled <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ifr<span class=\"token punctuation\">.</span>ifr_flags <span class=\"token operator\">&amp;</span> IFF_NAPI_FRAGS<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sysctl -w net.ipv6.conf.%s.accept_dad=0\"</span><span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sysctl -w net.ipv6.conf.%s.router_solicitations=0\"</span><span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip link set dev %s address %s\"</span><span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">,</span> LOCAL_MAC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip addr add %s/24 dev %s\"</span><span class=\"token punctuation\">,</span> LOCAL_IPV4<span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip -6 addr add %s/120 dev %s\"</span><span class=\"token punctuation\">,</span> LOCAL_IPV6<span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip neigh add %s lladdr %s dev %s nud permanent\"</span><span class=\"token punctuation\">,</span>\n\t\t\tREMOTE_IPV4<span class=\"token punctuation\">,</span> REMOTE_MAC<span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip -6 neigh add %s lladdr %s dev %s nud permanent\"</span><span class=\"token punctuation\">,</span>\n\t\t\tREMOTE_IPV6<span class=\"token punctuation\">,</span> REMOTE_MAC<span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip link set dev %s up\"</span><span class=\"token punctuation\">,</span> TUN_IFACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_IPV4</span> <span class=\"token string\">\"172.20.20.%d\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_IPV6</span> <span class=\"token string\">\"fe80::%02hx\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">DEV_MAC</span> <span class=\"token string\">\"aa:aa:aa:aa:aa:%02hx\"</span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize_netdevices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">unsigned</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> devtypes<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"ip6gretap\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bridge\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vcan\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bond\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"veth\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> devnames<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"lo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sit0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bridge0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"vcan0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tunl0\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token string\">\"gre0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"gretap0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip_vti0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip6_vti0\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token string\">\"ip6tnl0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip6gre0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip6gretap0\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token string\">\"erspan0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bond0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"veth0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"veth1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>devtypes<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>devtypes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip link add dev %s0 type %s\"</span><span class=\"token punctuation\">,</span> devtypes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> devtypes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip link add dev veth1 type veth\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>devnames<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>devnames<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">char</span> addr<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">snprintf_check</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> DEV_IPV4<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip -4 addr add %s/24 dev %s\"</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">,</span> devnames<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">snprintf_check</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> DEV_IPV6<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip -6 addr add %s/120 dev %s\"</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">,</span> devnames<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">snprintf_check</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> DEV_MAC<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip link set dev %s address %s\"</span><span class=\"token punctuation\">,</span> devnames<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">execute_command</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ip link set dev %s up\"</span><span class=\"token punctuation\">,</span> devnames<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read_tun</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tunfd <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> rv <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>tunfd<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rv <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> EAGAIN<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> EBADFD<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tun: read failed with %d\"</span><span class=\"token punctuation\">,</span> rv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> rv<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">flush_tun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> data<span class=\"token punctuation\">[</span>SYZ_TUN_MAX_PACKET_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">read_tun</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token class-name\">uintptr_t</span> <span class=\"token function\">syz_open_pts</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uintptr_t</span> a0<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uintptr_t</span> a1<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> ptyno <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ioctl</span><span class=\"token punctuation\">(</span>a0<span class=\"token punctuation\">,</span> TIOCGPTN<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ptyno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">128</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dev/pts/%d\"</span><span class=\"token punctuation\">,</span> ptyno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">open</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">XT_TABLE_SIZE</span> <span class=\"token expression\"><span class=\"token number\">1536</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">XT_MAX_ENTRIES</span> <span class=\"token expression\"><span class=\"token number\">10</span></span></span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">xt_counters</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">uint64_t</span> pcnt<span class=\"token punctuation\">,</span> bcnt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_getinfo</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> valid_hooks<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> hook_entry<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> underflow<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_get_entries</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span><span class=\"token operator\">*</span> entrytable<span class=\"token punctuation\">[</span>XT_TABLE_SIZE <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_replace</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> valid_hooks<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> hook_entry<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> underflow<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_counters<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">xt_counters</span><span class=\"token operator\">*</span> counters<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> entrytable<span class=\"token punctuation\">[</span>XT_TABLE_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_getinfo</span> info<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_replace</span> replace<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span> ipv4_tables<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"filter\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"nat\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"mangle\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"raw\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"security\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span> ipv6_tables<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"filter\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"nat\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"mangle\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"raw\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"security\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IPT_BASE_CTL</span> <span class=\"token expression\"><span class=\"token number\">64</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IPT_SO_SET_REPLACE</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>IPT_BASE_CTL<span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IPT_SO_GET_INFO</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>IPT_BASE_CTL<span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">IPT_SO_GET_ENTRIES</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>IPT_BASE_CTL <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_getinfo</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> valid_hooks<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> hook_entry<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> underflow<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_get_entries</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span><span class=\"token operator\">*</span> entrytable<span class=\"token punctuation\">[</span>XT_TABLE_SIZE <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_replace</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> valid_hooks<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> hook_entry<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> underflow<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num_counters<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">xt_counters</span><span class=\"token operator\">*</span> counters<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> entrytable<span class=\"token punctuation\">[</span>XT_TABLE_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_table_desc</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_getinfo</span> info<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_replace</span> replace<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_table_desc</span> arpt_tables<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"filter\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARPT_BASE_CTL</span> <span class=\"token expression\"><span class=\"token number\">96</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARPT_SO_SET_REPLACE</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>ARPT_BASE_CTL<span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARPT_SO_GET_INFO</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>ARPT_BASE_CTL<span class=\"token punctuation\">)</span></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">ARPT_SO_GET_ENTRIES</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>ARPT_BASE_CTL <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkpoint_iptables</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span><span class=\"token operator\">*</span> tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num_tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> family<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> level<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_get_entries</span> entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">socklen_t</span> optlen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">;</span>\n\n\tfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> IPPROTO_TCP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket(%d, SOCK_STREAM, IPPROTO_TCP)\"</span><span class=\"token punctuation\">,</span> family<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num_tables<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span><span class=\"token operator\">*</span> table <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tables<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> IPT_SO_GET_INFO<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>errno<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> EPERM<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> ENOENT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> ENOPROTOOPT<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(IPT_SO_GET_INFO)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size <span class=\"token operator\">></span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"table size is too large: %u\"</span><span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>num_entries <span class=\"token operator\">></span> XT_MAX_ENTRIES<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"too many counters: %u\"</span><span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>num_entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tentries<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> IPT_SO_GET_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(IPT_SO_GET_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>valid_hooks <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>valid_hooks<span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>num_entries <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>num_entries<span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>underflow<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>underflow<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>underflow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reset_iptables</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span><span class=\"token operator\">*</span> tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num_tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> family<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> level<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">xt_counters</span> counters<span class=\"token punctuation\">[</span>XT_MAX_ENTRIES<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_get_entries</span> entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_getinfo</span> info<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">socklen_t</span> optlen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">;</span>\n\n\tfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>family<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> IPPROTO_TCP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket(%d, SOCK_STREAM, IPPROTO_TCP)\"</span><span class=\"token punctuation\">,</span> family<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num_tables<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ipt_table_desc</span><span class=\"token operator\">*</span> table <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>tables<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>valid_hooks <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> IPT_SO_GET_INFO<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(IPT_SO_GET_INFO)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tentries<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> entries<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> IPT_SO_GET_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(IPT_SO_GET_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>num_counters <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>num_entries<span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>counters <span class=\"token operator\">=</span> counters<span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">setsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> IPT_SO_SET_REPLACE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">,</span> optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setsockopt(IPT_SO_SET_REPLACE)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkpoint_arptables</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_get_entries</span> entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">socklen_t</span> optlen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">;</span>\n\n\tfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> IPPROTO_TCP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arpt_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arpt_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_table_desc</span><span class=\"token operator\">*</span> table <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>arpt_tables<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> ARPT_SO_GET_INFO<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>errno<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> EPERM<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> ENOENT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> ENOPROTOOPT<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(ARPT_SO_GET_INFO)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size <span class=\"token operator\">></span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"table size is too large: %u\"</span><span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>num_entries <span class=\"token operator\">></span> XT_MAX_ENTRIES<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"too many counters: %u\"</span><span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>num_entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tentries<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> ARPT_SO_GET_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(ARPT_SO_GET_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>valid_hooks <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>valid_hooks<span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>num_entries <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>num_entries<span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>underflow<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>underflow<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>underflow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reset_arptables</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">xt_counters</span> counters<span class=\"token punctuation\">[</span>XT_MAX_ENTRIES<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_get_entries</span> entries<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_getinfo</span> info<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">socklen_t</span> optlen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">;</span>\n\n\tfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> IPPROTO_TCP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arpt_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>arpt_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">arpt_table_desc</span><span class=\"token operator\">*</span> table <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>arpt_tables<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>valid_hooks <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> ARPT_SO_GET_INFO<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(ARPT_SO_GET_INFO)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tentries<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> entries<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> ARPT_SO_GET_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>entries<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(ARPT_SO_GET_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> entries<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>info<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>num_counters <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>num_entries<span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>counters <span class=\"token operator\">=</span> counters<span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entrytable<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">setsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> ARPT_SO_SET_REPLACE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">,</span> optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setsockopt(ARPT_SO_SET_REPLACE)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/if.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/netfilter_bridge/ebtables.h></span></span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_table_desc</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> name<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_replace</span> replace<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> entrytable<span class=\"token punctuation\">[</span>XT_TABLE_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_table_desc</span> ebt_tables<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"filter\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"nat\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"broute\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkpoint_ebtables</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">socklen_t</span> optlen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">;</span>\n\n\tfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> IPPROTO_TCP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ebt_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ebt_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_table_desc</span><span class=\"token operator\">*</span> table <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>ebt_tables<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> EBT_SO_GET_INIT_INFO<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>errno<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> EPERM<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> ENOENT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> ENOPROTOOPT<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(EBT_SO_GET_INIT_INFO)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entries_size <span class=\"token operator\">></span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>entrytable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"table size is too large: %u\"</span><span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entries_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>num_counters <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entries <span class=\"token operator\">=</span> table<span class=\"token operator\">-></span>entrytable<span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entries_size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> EBT_SO_GET_INIT_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(EBT_SO_GET_INIT_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reset_ebtables</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_replace</span> replace<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> entrytable<span class=\"token punctuation\">[</span>XT_TABLE_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">socklen_t</span> optlen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">;</span>\n\n\tfd <span class=\"token operator\">=</span> <span class=\"token function\">socket</span><span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">,</span> IPPROTO_TCP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fd <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ebt_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ebt_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_table_desc</span><span class=\"token operator\">*</span> table <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>ebt_tables<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>valid_hooks <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>replace<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">strcpy</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> table<span class=\"token operator\">-></span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> EBT_SO_GET_INFO<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>replace<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(EBT_SO_GET_INFO)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\treplace<span class=\"token punctuation\">.</span>num_counters <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> h <span class=\"token operator\">&lt;</span> NF_BR_NUMHOOKS<span class=\"token punctuation\">;</span> h<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>replace<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>entrytable<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>entrytable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\treplace<span class=\"token punctuation\">.</span>entries <span class=\"token operator\">=</span> entrytable<span class=\"token punctuation\">;</span>\n\t\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>replace<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> replace<span class=\"token punctuation\">.</span>entries_size<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> EBT_SO_GET_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>replace<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getsockopt(EBT_SO_GET_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">memcmp</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>entrytable<span class=\"token punctuation\">,</span> entrytable<span class=\"token punctuation\">,</span> replace<span class=\"token punctuation\">.</span>entries_size<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> h <span class=\"token operator\">&lt;</span> NF_BR_NUMHOOKS<span class=\"token punctuation\">;</span> h<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>valid_hooks <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\ttable<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>hook_entry<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">ebt_entries</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>table<span class=\"token operator\">-></span>entrytable <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span>\n\t\t\t\tj<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\toptlen <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">.</span>entries_size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">setsockopt</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">,</span> EBT_SO_SET_ENTRIES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>table<span class=\"token operator\">-></span>replace<span class=\"token punctuation\">,</span> optlen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setsockopt(EBT_SO_SET_ENTRIES)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">checkpoint_net_namespace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">checkpoint_ebtables</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">checkpoint_arptables</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">checkpoint_iptables</span><span class=\"token punctuation\">(</span>ipv4_tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv4_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv4_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AF_INET<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">checkpoint_iptables</span><span class=\"token punctuation\">(</span>ipv6_tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv6_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv6_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AF_INET6<span class=\"token punctuation\">,</span> SOL_IPV6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reset_net_namespace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">reset_ebtables</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">reset_arptables</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">reset_iptables</span><span class=\"token punctuation\">(</span>ipv4_tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv4_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv4_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AF_INET<span class=\"token punctuation\">,</span> SOL_IP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">reset_iptables</span><span class=\"token punctuation\">(</span>ipv6_tables<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv6_tables<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ipv6_tables<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AF_INET6<span class=\"token punctuation\">,</span> SOL_IPV6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">remove_dir</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> dir<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tDIR<span class=\"token operator\">*</span> dp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">dirent</span><span class=\"token operator\">*</span> ep<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> iter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nretry<span class=\"token operator\">:</span>\n\tdp <span class=\"token operator\">=</span> <span class=\"token function\">opendir</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dp <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> EMFILE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"opendir(%s) failed due to NOFILE, exiting\"</span><span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"opendir(%s) failed\"</span><span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ep <span class=\"token operator\">=</span> <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>ep<span class=\"token operator\">-></span>d_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>ep<span class=\"token operator\">-></span>d_name<span class=\"token punctuation\">,</span> <span class=\"token string\">\"..\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">char</span> filename<span class=\"token punctuation\">[</span>FILENAME_MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">snprintf</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s/%s\"</span><span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">,</span> ep<span class=\"token operator\">-></span>d_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">stat</span> st<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">lstat</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lstat(%s) failed\"</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">S_ISDIR</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">.</span>st_mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">remove_dir</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> EROFS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">!=</span> EBUSY <span class=\"token operator\">||</span> i <span class=\"token operator\">></span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unlink(%s) failed\"</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">umount2</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> MNT_DETACH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"umount(%s) failed\"</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">closedir</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">rmdir</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> EROFS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> EBUSY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">umount2</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> MNT_DETACH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"umount(%s) failed\"</span><span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errno <span class=\"token operator\">==</span> ENOTEMPTY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iter <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\titer<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">goto</span> retry<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">exitf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rmdir(%s) failed\"</span><span class=\"token punctuation\">,</span> dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> iter<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">checkpoint_net_namespace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>iter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> iter<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">char</span> cwdbuf<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>cwdbuf<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./%d\"</span><span class=\"token punctuation\">,</span> iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mkdir</span><span class=\"token punctuation\">(</span>cwdbuf<span class=\"token punctuation\">,</span> <span class=\"token number\">0777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to mkdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> pid <span class=\"token operator\">=</span> <span class=\"token function\">fork</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"loop fork failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pid <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">prctl</span><span class=\"token punctuation\">(</span>PR_SET_PDEATHSIG<span class=\"token punctuation\">,</span> SIGKILL<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setpgrp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span>cwdbuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to chdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">flush_tun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">doexit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">int</span> status <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">uint64_t</span> start <span class=\"token operator\">=</span> <span class=\"token function\">current_time_ms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> res <span class=\"token operator\">=</span> <span class=\"token function\">waitpid</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">,</span> __WALL <span class=\"token operator\">|</span> WNOHANG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">==</span> pid<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">usleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">current_time_ms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">kill</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>pid<span class=\"token punctuation\">,</span> SIGKILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">kill</span><span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">,</span> SIGKILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">waitpid</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">,</span> __WALL<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> pid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">remove_dir</span><span class=\"token punctuation\">(</span>cwdbuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">reset_net_namespace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">uint64_t</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0xffffffffffffffff</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xffffffffffffffff</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xffffffffffffffff</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">long</span> res<span class=\"token punctuation\">;</span><span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000280</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/dev/loop-control\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_openat<span class=\"token punctuation\">,</span> <span class=\"token number\">0xffffffffffffff9c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000280</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000180</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000188</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000190</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000198</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_timer_settime<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000500</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x77359400</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000508</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000510</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint64_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000518</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x989680</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_timer_settime<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000540</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tres <span class=\"token operator\">=</span> <span class=\"token function\">syz_open_pts</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x42100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\tr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_ioctl<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5462</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000140</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_ioctl<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80084504</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x200002c0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tres <span class=\"token operator\">=</span> <span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_pipe2<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>res <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000000</span><span class=\"token punctuation\">;</span>\n\tr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000004</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000040</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000042</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x200</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000044</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x8000</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000046</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000048</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x22</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint16_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x2000004a</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x45f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_ioctl<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x560a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000040</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_fstatfs<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x200000c0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syz_open_pts</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0x20000340</span> <span class=\"token operator\">=</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_accept<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000340</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_fcntl<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x40400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">syscall</span><span class=\"token punctuation\">(</span>__NR_mmap<span class=\"token punctuation\">,</span> <span class=\"token number\">0x20000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x32</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>cwd <span class=\"token operator\">=</span> <span class=\"token function\">get_current_dir_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span>cwd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to chdir\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">use_temporary_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">initialize_tun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">initialize_netdevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>End</strong></p>","excerpt":"getsockopt - task hung in lock_sock_nested Posting in a long time :) because of other stuff. I have a few LK bugs but skip it :). I just fo…","tableOfContents":"<ul>\n<li>\n<p><a href=\"#getsockopt---task-hung-in-lock_sock_nested\">getsockopt - task hung in lock_sock_nested</a></p>\n<ul>\n<li><a href=\"#call-trace-dump\">Call Trace (Dump)</a></li>\n<li><a href=\"#bug\">Bug</a></li>\n<li><a href=\"#poc\">POC</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#fifo_open---possible-circular-locking-leading-to-deadlock\">fifo_open - possible circular locking (leading to deadlock)</a></p>\n<ul>\n<li><a href=\"#call-trace-dump-1\">Call Trace (Dump)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#seq_read---possible-circular-locking-leading-to-deadlock\">seq_read - possible circular locking (leading to deadlock)</a></p>\n<ul>\n<li><a href=\"#call-trace-dump-2\">Call Trace (Dump)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#pfifo_fast_enqueue---unable-to-handle-kernel-paging-request\">pfifo_fast_enqueue - unable to handle kernel paging request</a></p>\n<ul>\n<li><a href=\"#call-trace-dump-3\">Call Trace (Dump)</a></li>\n<li><a href=\"#bug-1\">Bug</a></li>\n<li><a href=\"#solution\">Solution</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#tick_sched_timehandle---alloca-out-of-bounds\">tick_sched_time/handle - alloca Out Of Bounds</a></p>\n<ul>\n<li><a href=\"#call-trace-dump-4\">Call Trace (Dump)</a></li>\n<li><a href=\"#poc-1\">PoC</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/2018-02-Founds/"},"frontmatter":{"title":"Linux Kernel - 2018-02 Founds","date":"Feb 14, 2018","tags":["Security","Linux-Kernel"],"keywords":["0-day","Bug"],"update":"Feb 24, 2018"},"timeToRead":34}},"pageContext":{"slug":"/2018-02-Founds/","series":[],"lastmod":"2018-02-24"}},
    "staticQueryHashes": ["2027115977","2744905544","694178885"]}