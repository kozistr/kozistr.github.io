{"version":3,"file":"component---src-pages-index-tsx-1442d7ce84d0030b3b90.js","mappings":"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","sources":["webpack://borderless/./src/components/PostList/index.tsx","webpack://borderless/./src/components/Bio/index.tsx","webpack://borderless/./src/pages/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo, useEffect, useState, useCallback } from 'react';\nimport { Link } from 'gatsby';\nimport { throttle } from 'lodash';\n\nimport './postList.scss';\n\nexport interface PostListProps {\n  posts: any[];\n}\n\nconst PostList = memo((props: PostListProps) => {\n  const { posts } = props;\n  const [showCnt, setShowCnt] = useState(10);\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= posts.length) return prev;\n          return prev + 10;\n        });\n      }\n    }, 250),\n    []\n  );\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttleScrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler);\n    };\n  }, []);\n\n  posts.sort((a: any, b: any) => {\n    const aDate = new Date(a.node.frontmatter.update ?? a.node.frontmatter.date);\n    const bDate = new Date(b.node.frontmatter.update ?? b.node.frontmatter.date);\n\n    if (aDate < bDate) return 1;\n    if (aDate > bDate) return -1;\n    return 0;\n  });\n\n  const mapPost = posts.map((post: any, i: number) => {\n    const { node } = post;\n    const { excerpt, fields, frontmatter, timeToRead } = node;\n    const { slug } = fields;\n    const { date, title, tags } = frontmatter;\n  \n    let update = frontmatter.update;\n    if (Number(update.split(',')[1]) === 1) update = null;\n\n    const mapTag = tags.map((tag: string) => {\n      if (tag === 'undefined') return;\n\n      return (\n        <li key={`${slug}-${tag}`} className=\"tag\">\n          <span>\n            <Link to={`/tags#${tag}`} className=\"link\">{`#${tag}`}</Link>\n          </span>\n        </li>\n      );\n    });\n\n    return (\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\n        <div className=\"date\">\n          <small>\n            {date} • {timeToRead} min read ☕\n          </small>\n        </div>\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug} className=\"link\">\n              {title}\n            </Link>\n          </h2>\n          <div className=\"info\">\n            <ul className=\"tag-list\">{mapTag}</ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug} className=\"link\">\n              {excerpt}\n            </Link>\n          </span>\n        </article>\n      </li>\n    );\n  });\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  );\n});\n\nexport default PostList;\n","import * as React from 'react';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport {\n  faUserCircle,\n  faAt,\n  faMapMarkerAlt,\n  faBuilding,\n  faLink,\n  faAddressCard,\n  faRss,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faFacebook,\n  faInstagram,\n  faLinkedin,\n  faGithub,\n  faKaggle,\n  faMedium,\n  faSlideshare,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport './bio.scss';\nimport config from '../../../config';\n\nconst Bio = () => {\n  const {\n    comment,\n    name,\n    company,\n    location,\n    email,\n    website,\n    linkedin,\n    facebook,\n    instagram,\n    github,\n    kaggle,\n    medium,\n    sildeshare,\n  } = config;\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <a href=\"/about\">\n            <span>{name}</span>\n          </a>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faBuilding} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"bio-item about\">\n        <div className=\"icon-wrap\">\n          <Fa icon={faAddressCard} />\n        </div>\n\n        <a href=\"/about\">\n          <span>About ME</span>\n        </a>\n      </div>\n\n      <div className=\"social\">\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n        {!kaggle ? null : (\n          <a href={kaggle} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faKaggle} className=\"kaggle\" />\n          </a>\n        )}\n        {!medium ? null : (\n          <a href={medium} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faMedium} className=\"medium\" />\n          </a>\n        )}\n        {!sildeshare ? null : (\n          <a href={sildeshare} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faSlideshare} className=\"sildeshare\" />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport './styles/index.scss';\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Bio from '../components/Bio';\nimport PostList from '../components/PostList';\n\ninterface IndexPageProps {\n  path: string;\n  data: any;\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props;\n  const posts = data.allMarkdownRemark.edges;\n  const title = data.site.siteMetadata.title;\n\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 10 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(truncate: true, format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            update(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["PostList","memo","props","posts","useState","showCnt","setShowCnt","throttleScrollHandler","useCallback","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","length","useEffect","addEventListener","removeEventListener","sort","a","b","aDate","Date","node","frontmatter","update","date","bDate","mapPost","map","post","i","excerpt","fields","timeToRead","slug","title","tags","Number","split","mapTag","tag","key","className","Link","to","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","kaggle","medium","sildeshare","icon","faUserCircle","href","faBuilding","faMapMarkerAlt","faAt","faLink","target","rel","faAddressCard","faRss","faLinkedin","faFacebook","faInstagram","faGithub","faKaggle","faMedium","faSlideshare","data","allMarkdownRemark","edges","site","siteMetadata","Layout","faSearch"],"sourceRoot":""}